/*******************************************************************************
 * BEGIN COPYRIGHT NOTICE
 * 
 * This file is part of program "cobolg"
 * Copyright 2016  Rodrigo Lemos
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * END COPYRIGHT NOTICE
 ******************************************************************************/
package br.eti.rslemos.cobolg;

import java.util.ResourceBundle;

import org.junit.Test;

import br.eti.rslemos.cobolg.COBOLParser.StmtSORTContext;
import br.eti.rslemos.cobolg.Waive.CompilationError;

@Waive({CompilationError.EXACT_AMBIGUITY, CompilationError.FULL_CONTEXT_ATTEMPT})
public class StmtSORT {
	private static final ResourceBundle TEST_DATA = ResourceBundle.getBundle("br.eti.rslemos.cobolg.stmtSORT");
	public static String get(String key) { return TEST_DATA.getString(key); }

	private static CompilerHelper<StmtSORTContext> helper = new CompilerHelper<StmtSORTContext>() {
		@Override protected StmtSORTContext parsePart() { return parser.stmtSORT(); }
	};
	
	@Test public void SORT_DATA_0() {
		helper.compileAndVerify(
				get("SORT_DATA_0.source"),
				get("SORT_DATA_0.tree")
			);
	}
	
	@Test public void SORT_DATA_0_ON_ASCENDING_KEY_DATA_1_DATA_2() {
		helper.compileAndVerify(
				get("SORT_DATA_0_ON_ASCENDING_KEY_DATA_1_DATA_2.source"),
				get("SORT_DATA_0_ON_ASCENDING_KEY_DATA_1_DATA_2.tree")
			);
	}
	
	@Test public void SORT_DATA_0_ON_DESCENDING_KEY_DATA_1_DATA_2_ON_ASCENDING_KEY_DATA_3_DATA_4() {
		helper.compileAndVerify(
				get("SORT_DATA_0_ON_DESCENDING_KEY_DATA_1_DATA_2_ON_ASCENDING_KEY_DATA_3_DATA_4.source"),
				get("SORT_DATA_0_ON_DESCENDING_KEY_DATA_1_DATA_2_ON_ASCENDING_KEY_DATA_3_DATA_4.tree")
			);
	}
	
	@Test public void SORT_DATA_0_COLLATING_SEQUENCE_IS_ALPHABET_1() {
		helper.compileAndVerify(
				get("SORT_DATA_0_COLLATING_SEQUENCE_IS_ALPHABET_1.source"),
				get("SORT_DATA_0_COLLATING_SEQUENCE_IS_ALPHABET_1.tree")
			);
	}
	
	@Test public void SORT_DATA_0_ON_ASCENDING_KEY_DATA_1_COLLATING_SEQUENCE_IS_ALPHABET_1() {
		helper.compileAndVerify(
				get("SORT_DATA_0_ON_ASCENDING_KEY_DATA_1_COLLATING_SEQUENCE_IS_ALPHABET_1.source"),
				get("SORT_DATA_0_ON_ASCENDING_KEY_DATA_1_COLLATING_SEQUENCE_IS_ALPHABET_1.tree")
			);
	}
	
	@Test public void SORT_DATA_0_ON_DESCENDING_KEY_DATA_1_ON_ASCENDING_KEY_DATA_3_COLLATING_SEQUENCE_IS_ALPHABET_1() {
		helper.compileAndVerify(
				get("SORT_DATA_0_ON_DESCENDING_KEY_DATA_1_ON_ASCENDING_KEY_DATA_3_COLLATING_SEQUENCE_IS_ALPHABET_1.source"),
				get("SORT_DATA_0_ON_DESCENDING_KEY_DATA_1_ON_ASCENDING_KEY_DATA_3_COLLATING_SEQUENCE_IS_ALPHABET_1.tree")
			);
	}
	
	@Test public void SORT_DATA_0_WITH_DUPLICATES_IN_ORDER() {
		helper.compileAndVerify(
				get("SORT_DATA_0_WITH_DUPLICATES_IN_ORDER.source"),
				get("SORT_DATA_0_WITH_DUPLICATES_IN_ORDER.tree")
			);
	}
	
	@Test public void SORT_DATA_0_DESCENDING_KEY_DATA_1_DATA_2_WITH_DUPLICATES_ORDER() {
		helper.compileAndVerify(
				get("SORT_DATA_0_DESCENDING_KEY_DATA_1_DATA_2_WITH_DUPLICATES_ORDER.source"),
				get("SORT_DATA_0_DESCENDING_KEY_DATA_1_DATA_2_WITH_DUPLICATES_ORDER.tree")
			);
	}
	
	@Test public void SORT_DATA_0_ASCENDING_KEY_DATA_1_DATA_2_DESCENDING_KEY_DATA_3_DATA_4_WITH_DUPLICATES_IN() {
		helper.compileAndVerify(
				get("SORT_DATA_0_ASCENDING_KEY_DATA_1_DATA_2_DESCENDING_KEY_DATA_3_DATA_4_WITH_DUPLICATES_IN.source"),
				get("SORT_DATA_0_ASCENDING_KEY_DATA_1_DATA_2_DESCENDING_KEY_DATA_3_DATA_4_WITH_DUPLICATES_IN.tree")
			);
	}
	
	@Test public void SORT_DATA_0_DUPLICATES_IN_ORDER_COLLATING_SEQUENCE_ALPHABET_1() {
		helper.compileAndVerify(
				get("SORT_DATA_0_DUPLICATES_IN_ORDER_COLLATING_SEQUENCE_ALPHABET_1.source"),
				get("SORT_DATA_0_DUPLICATES_IN_ORDER_COLLATING_SEQUENCE_ALPHABET_1.tree")
			);
	}
	
	@Test public void SORT_DATA_0_ASCENDING_DATA_1_DUPLICATES_SEQUENCE_IS_ALPHABET_1() {
		helper.compileAndVerify(
				get("SORT_DATA_0_ASCENDING_DATA_1_DUPLICATES_SEQUENCE_IS_ALPHABET_1.source"),
				get("SORT_DATA_0_ASCENDING_DATA_1_DUPLICATES_SEQUENCE_IS_ALPHABET_1.tree")
			);
	}
	
	@Test public void SORT_DATA_0_DESCENDING_DATA_1_DATA_2_ASCENDING_DATA_3_DUPLICATES_SEQUENCE_ALPHABET_1() {
		helper.compileAndVerify(
				get("SORT_DATA_0_DESCENDING_DATA_1_DATA_2_ASCENDING_DATA_3_DUPLICATES_SEQUENCE_ALPHABET_1.source"),
				get("SORT_DATA_0_DESCENDING_DATA_1_DATA_2_ASCENDING_DATA_3_DUPLICATES_SEQUENCE_ALPHABET_1.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ON_ASCENDING_KEY_DATA_1_DATA_2_USING_FILE_1_FILE_2_GIVING_FILE_3_FILE_4() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ON_ASCENDING_KEY_DATA_1_DATA_2_USING_FILE_1_FILE_2_GIVING_FILE_3_FILE_4.source"),
				get("SORT_FILE_0_ON_ASCENDING_KEY_DATA_1_DATA_2_USING_FILE_1_FILE_2_GIVING_FILE_3_FILE_4.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ON_DESCENDING_KEY_DATA_1_DATA_2_ON_ASCENDING_KEY_DATA_3_DATA_4_USING_FILE_1_FILE_2_GIVING_FILE_3_FILE_4() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ON_DESCENDING_KEY_DATA_1_DATA_2_ON_ASCENDING_KEY_DATA_3_DATA_4_USING_FILE_1_FILE_2_GIVING_FILE_3_FILE_4.source"),
				get("SORT_FILE_0_ON_DESCENDING_KEY_DATA_1_DATA_2_ON_ASCENDING_KEY_DATA_3_DATA_4_USING_FILE_1_FILE_2_GIVING_FILE_3_FILE_4.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_DATA_1_DATA_2_DUPLICATES_IN_USING_FILE_1_FILE_2_GIVING_FILE_3_FILE_4() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_DATA_1_DATA_2_DUPLICATES_IN_USING_FILE_1_FILE_2_GIVING_FILE_3_FILE_4.source"),
				get("SORT_FILE_0_ASCENDING_DATA_1_DATA_2_DUPLICATES_IN_USING_FILE_1_FILE_2_GIVING_FILE_3_FILE_4.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ON_ASCENDING_KEY_DATA_1_DATA_2_ON_DESCENDING_KEY_DATA_3_DATA_4_WITH_DUPLICATES_IN_ORDER_USING_FILE_1_GIVING_FILE_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ON_ASCENDING_KEY_DATA_1_DATA_2_ON_DESCENDING_KEY_DATA_3_DATA_4_WITH_DUPLICATES_IN_ORDER_USING_FILE_1_GIVING_FILE_3.source"),
				get("SORT_FILE_0_ON_ASCENDING_KEY_DATA_1_DATA_2_ON_DESCENDING_KEY_DATA_3_DATA_4_WITH_DUPLICATES_IN_ORDER_USING_FILE_1_GIVING_FILE_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ON_DESCENDING_DATA_1_DATA_2_COLLATING_SEQUENCE_IS_ALPHABET_1_USING_FILE_1_FILE_2_GIVING_FILE_3_FILE_4() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ON_DESCENDING_DATA_1_DATA_2_COLLATING_SEQUENCE_IS_ALPHABET_1_USING_FILE_1_FILE_2_GIVING_FILE_3_FILE_4.source"),
				get("SORT_FILE_0_ON_DESCENDING_DATA_1_DATA_2_COLLATING_SEQUENCE_IS_ALPHABET_1_USING_FILE_1_FILE_2_GIVING_FILE_3_FILE_4.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ON_ASCENDING_KEY_DATA_1_DATA_2_DESCENDING_KEY_DATA_3_DATA_4_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_GIVING_FILE_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ON_ASCENDING_KEY_DATA_1_DATA_2_DESCENDING_KEY_DATA_3_DATA_4_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_GIVING_FILE_3.source"),
				get("SORT_FILE_0_ON_ASCENDING_KEY_DATA_1_DATA_2_DESCENDING_KEY_DATA_3_DATA_4_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_GIVING_FILE_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ON_DESCENDING_DATA_1_DATA_2_WITH_DUPLICATES_ORDER_SEQUENCE_IS_ALPHABET_1_USING_FILE_1_GIVING_FILE_3_FILE_4() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ON_DESCENDING_DATA_1_DATA_2_WITH_DUPLICATES_ORDER_SEQUENCE_IS_ALPHABET_1_USING_FILE_1_GIVING_FILE_3_FILE_4.source"),
				get("SORT_FILE_0_ON_DESCENDING_DATA_1_DATA_2_WITH_DUPLICATES_ORDER_SEQUENCE_IS_ALPHABET_1_USING_FILE_1_GIVING_FILE_3_FILE_4.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_DATA_4_DUPLICATES_SEQUENCE_IS_ALPHABET_1_USING_FILE_1_GIVING_FILE_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_DATA_4_DUPLICATES_SEQUENCE_IS_ALPHABET_1_USING_FILE_1_GIVING_FILE_3.source"),
				get("SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_DATA_4_DUPLICATES_SEQUENCE_IS_ALPHABET_1_USING_FILE_1_GIVING_FILE_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_DESCENDING_DATA_1_DATA_2_INPUT_PROCEDURE_IS_PROC_1_THROUGH_PROC_2_GIVING_FILE_3_FILE_4() {
		helper.compileAndVerify(
				get("SORT_FILE_0_DESCENDING_DATA_1_DATA_2_INPUT_PROCEDURE_IS_PROC_1_THROUGH_PROC_2_GIVING_FILE_3_FILE_4.source"),
				get("SORT_FILE_0_DESCENDING_DATA_1_DATA_2_INPUT_PROCEDURE_IS_PROC_1_THROUGH_PROC_2_GIVING_FILE_3_FILE_4.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ON_ASCENDING_KEY_DATA_1_DATA_2_ON_DESCENDING_KEY_DATA_3_DATA_4_INPUT_PROCEDURE_PROC_1_THRU_PROC_2_GIVING_FILE_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ON_ASCENDING_KEY_DATA_1_DATA_2_ON_DESCENDING_KEY_DATA_3_DATA_4_INPUT_PROCEDURE_PROC_1_THRU_PROC_2_GIVING_FILE_3.source"),
				get("SORT_FILE_0_ON_ASCENDING_KEY_DATA_1_DATA_2_ON_DESCENDING_KEY_DATA_3_DATA_4_INPUT_PROCEDURE_PROC_1_THRU_PROC_2_GIVING_FILE_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ON_DESCENDING_KEY_DATA_1_DATA_2_DUPLICATES_IN_INPUT_PROCEDURE_IS_PROC_1_THROUGH_PROC_2_GIVING_FILE_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ON_DESCENDING_KEY_DATA_1_DATA_2_DUPLICATES_IN_INPUT_PROCEDURE_IS_PROC_1_THROUGH_PROC_2_GIVING_FILE_3.source"),
				get("SORT_FILE_0_ON_DESCENDING_KEY_DATA_1_DATA_2_DUPLICATES_IN_INPUT_PROCEDURE_IS_PROC_1_THROUGH_PROC_2_GIVING_FILE_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_DATA_1_DATA_2_DESCENDING_DATA_3_DATA_4_WITH_DUPLICATES_INPUT_PROCEDURE_PROC_1_THRU_PROC_2_GIVING_FILE_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_DATA_1_DATA_2_DESCENDING_DATA_3_DATA_4_WITH_DUPLICATES_INPUT_PROCEDURE_PROC_1_THRU_PROC_2_GIVING_FILE_3.source"),
				get("SORT_FILE_0_ASCENDING_DATA_1_DATA_2_DESCENDING_DATA_3_DATA_4_WITH_DUPLICATES_INPUT_PROCEDURE_PROC_1_THRU_PROC_2_GIVING_FILE_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ON_DESCENDING_DATA_1_COLLATING_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_PROC_1_THROUGH_PROC_2_GIVING_FILE_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ON_DESCENDING_DATA_1_COLLATING_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_PROC_1_THROUGH_PROC_2_GIVING_FILE_3.source"),
				get("SORT_FILE_0_ON_DESCENDING_DATA_1_COLLATING_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_PROC_1_THROUGH_PROC_2_GIVING_FILE_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_KEY_DATA_1_ON_DESCENDING_DATA_3_SEQUENCE_IS_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_THRU_PROC_2_GIVING_FILE_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_KEY_DATA_1_ON_DESCENDING_DATA_3_SEQUENCE_IS_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_THRU_PROC_2_GIVING_FILE_3.source"),
				get("SORT_FILE_0_ASCENDING_KEY_DATA_1_ON_DESCENDING_DATA_3_SEQUENCE_IS_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_THRU_PROC_2_GIVING_FILE_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_KEY_DATA_1_DUPLICATES_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_PROC_1_THRU_PROC_2_GIVING_FILE_3_FILE_4() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_KEY_DATA_1_DUPLICATES_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_PROC_1_THRU_PROC_2_GIVING_FILE_3_FILE_4.source"),
				get("SORT_FILE_0_ASCENDING_KEY_DATA_1_DUPLICATES_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_PROC_1_THRU_PROC_2_GIVING_FILE_3_FILE_4.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ON_DESCENDING_DATA_1_ON_ASCENDING_DATA_3_DATA_4_DUPLICATES_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_PROC_1_THRU_PROC_2_GIVING_FILE_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ON_DESCENDING_DATA_1_ON_ASCENDING_DATA_3_DATA_4_DUPLICATES_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_PROC_1_THRU_PROC_2_GIVING_FILE_3.source"),
				get("SORT_FILE_0_ON_DESCENDING_DATA_1_ON_ASCENDING_DATA_3_DATA_4_DUPLICATES_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_PROC_1_THRU_PROC_2_GIVING_FILE_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_DATA_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3_THROUGH_PROC_4() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_DATA_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3_THROUGH_PROC_4.source"),
				get("SORT_FILE_0_ASCENDING_DATA_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3_THROUGH_PROC_4.tree")
			);
	}
	
	@Test public void SORT_FILE_0_DESCENDING_DATA_1_ASCENDING_DATA_3_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_DESCENDING_DATA_1_ASCENDING_DATA_3_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3.source"),
				get("SORT_FILE_0_DESCENDING_DATA_1_ASCENDING_DATA_3_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_DATA_1_DUPLICATES_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3_THRU_PROC_4() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_DATA_1_DUPLICATES_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3_THRU_PROC_4.source"),
				get("SORT_FILE_0_ASCENDING_DATA_1_DUPLICATES_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3_THRU_PROC_4.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_DUPLICATES_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_DUPLICATES_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3.source"),
				get("SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_DUPLICATES_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_DESCENDING_DATA_1_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_DESCENDING_DATA_1_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3.source"),
				get("SORT_FILE_0_DESCENDING_DATA_1_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3.source"),
				get("SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_DATA_1_DUPLICATES_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_DATA_1_DUPLICATES_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3.source"),
				get("SORT_FILE_0_ASCENDING_DATA_1_DUPLICATES_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_DESCENDING_DATA_1_ASCENDING_DATA_3_DUPLICATES_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_DESCENDING_DATA_1_ASCENDING_DATA_3_DUPLICATES_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3.source"),
				get("SORT_FILE_0_DESCENDING_DATA_1_ASCENDING_DATA_3_DUPLICATES_SEQUENCE_ALPHABET_1_USING_FILE_1_FILE_2_OUTPUT_PROCEDURE_PROC_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_DATA_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_DATA_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.source"),
				get("SORT_FILE_0_ASCENDING_DATA_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.source"),
				get("SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_DESCENDING_DATA_1_DUPLICATES_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_DESCENDING_DATA_1_DUPLICATES_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.source"),
				get("SORT_FILE_0_DESCENDING_DATA_1_DUPLICATES_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_DUPLICATES_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_DUPLICATES_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.source"),
				get("SORT_FILE_0_ASCENDING_DATA_1_DESCENDING_DATA_3_DUPLICATES_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_DATA_1_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_DATA_1_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.source"),
				get("SORT_FILE_0_ASCENDING_DATA_1_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_DESCENDING_DATA_1_ASCENDING_DATA_3_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_DESCENDING_DATA_1_ASCENDING_DATA_3_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.source"),
				get("SORT_FILE_0_DESCENDING_DATA_1_ASCENDING_DATA_3_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_ASCENDING_DATA_1_DUPLICATES_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_ASCENDING_DATA_1_DUPLICATES_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.source"),
				get("SORT_FILE_0_ASCENDING_DATA_1_DUPLICATES_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.tree")
			);
	}
	
	@Test public void SORT_FILE_0_DESCENDING_DATA_1_ASCENDING_DATA_3_DUPLICATES_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3() {
		helper.compileAndVerify(
				get("SORT_FILE_0_DESCENDING_DATA_1_ASCENDING_DATA_3_DUPLICATES_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.source"),
				get("SORT_FILE_0_DESCENDING_DATA_1_ASCENDING_DATA_3_DUPLICATES_SEQUENCE_ALPHABET_1_INPUT_PROCEDURE_IS_PROC_1_OUTPUT_PROCEDURE_IS_PROC_3.tree")
			);
	}
}
