# BEGIN COPYRIGHT NOTICE
# 
# This file is part of program "cobolg"
# Copyright 2016  Rodrigo Lemos
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# END COPYRIGHT NOTICE

PERFORM_PROC_1.source=PERFORM PROC-1
PERFORM_PROC_1.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1))))

PERFORM_PROC_1_THROUGH_PROC_2.source=PERFORM PROC-1 THROUGH PROC-2
PERFORM_PROC_1_THROUGH_PROC_2.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THROUGH (procedureName (sectionName PROC-2))))


PERFORM_PROC_1_N_TIMES.source=PERFORM PROC-1 N TIMES
PERFORM_PROC_1_N_TIMES.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performTimes (identifier N) TIMES)))

PERFORM_PROC_1_10_TIMES.source=PERFORM PROC-1 10 TIMES
PERFORM_PROC_1_10_TIMES.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performTimes 10 TIMES)))

PERFORM_PROC_1_THRU_PROC_2_N_TIMES.source=PERFORM PROC-1 THRU PROC-2 N TIMES
PERFORM_PROC_1_THRU_PROC_2_N_TIMES.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performTimes (identifier N) TIMES)))

PERFORM_PROC_1_THRU_PROC_2_10_TIMES.source=PERFORM PROC-1 THRU PROC-2 10 TIMES
PERFORM_PROC_1_THRU_PROC_2_10_TIMES.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performTimes 10 TIMES)))


PERFORM_PROC_1_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 UNTIL N < 0
PERFORM_PROC_1_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performUntil UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))

PERFORM_PROC_1_WITH_TEST_BEFORE_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 WITH TEST BEFORE UNTIL N < 0
PERFORM_PROC_1_WITH_TEST_BEFORE_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performUntil WITH TEST BEFORE UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))

PERFORM_PROC_1_WITH_TEST_AFTER_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 WITH TEST AFTER UNTIL N < 0
PERFORM_PROC_1_WITH_TEST_AFTER_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performUntil WITH TEST AFTER UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))

PERFORM_PROC_1_THRU_PROC_2_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 THRU PROC-2 UNTIL N < 0
PERFORM_PROC_1_THRU_PROC_2_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performUntil UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))

PERFORM_PROC_1_THRU_PROC_2_TEST_BEFORE_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 THRU PROC-2 TEST BEFORE UNTIL N < 0
PERFORM_PROC_1_THRU_PROC_2_TEST_BEFORE_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performUntil TEST BEFORE UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))

PERFORM_PROC_1_THRU_PROC_2_TEST_AFTER_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 THRU PROC-2 TEST AFTER UNTIL N < 0
PERFORM_PROC_1_THRU_PROC_2_TEST_AFTER_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performUntil TEST AFTER UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))


PERFORM_PROC_1_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_M_STEP_UNTIL_M_OP_EQUAL_20.source=PERFORM PROC-1 VARYING N FROM N-LOW BY N-STEP UNTIL N < 0 AFTER M FROM M-LOW BY M-STEP UNTIL M = 20
PERFORM_PROC_1_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_M_STEP_UNTIL_M_OP_EQUAL_20.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performVarying VARYING (identifier N) FROM (identifier N-LOW) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (identifier M-LOW) BY (identifier M-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20))))))))

PERFORM_PROC_1_WITH_TEST_BEFORE_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 WITH TEST BEFORE VARYING N FROM N-LOW BY N-STEP UNTIL N < 0
PERFORM_PROC_1_WITH_TEST_BEFORE_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performVarying WITH TEST BEFORE VARYING (identifier N) FROM (identifier N-LOW) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))

PERFORM_PROC_1_WITH_TEST_AFTER_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_5_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_K_LOW_BY_K_STEP_UNTIL_K_OP_GREATER_M.source=PERFORM PROC-1 WITH TEST AFTER VARYING N FROM N-LOW BY N-STEP UNTIL N < 0 AFTER M FROM M-LOW BY 5 UNTIL M = 20 AFTER K FROM K-LOW BY K-STEP UNTIL K > M
PERFORM_PROC_1_WITH_TEST_AFTER_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_5_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_K_LOW_BY_K_STEP_UNTIL_K_OP_GREATER_M.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performVarying WITH TEST AFTER VARYING (identifier N) FROM (identifier N-LOW) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (identifier M-LOW) BY (literal (numericLiteral 5)) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20)))))) (performVaryingAfterPhrase AFTER (identifier K) FROM (identifier K-LOW) BY (identifier K-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier K)) (relation >) (operand (identifier M)))))))

PERFORM_PROC_1_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_M_STEP_UNTIL_M_OP_EQUAL_20.source=PERFORM PROC-1 VARYING N FROM N-LOW BY -2 UNTIL N < 0 AFTER M FROM -10 BY M-STEP UNTIL M = 20
PERFORM_PROC_1_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_M_STEP_UNTIL_M_OP_EQUAL_20.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performVarying VARYING (identifier N) FROM (identifier N-LOW) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (literal (numericLiteral -10)) BY (identifier M-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20))))))))

PERFORM_PROC_1_WITH_TEST_BEFORE_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_5_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_K_LOW_BY_10_UNTIL_K_OP_GREATER_M.source=PERFORM PROC-1 WITH TEST BEFORE VARYING N FROM N-LOW BY -2 UNTIL N < 0 AFTER M FROM -10 BY 5 UNTIL M = 20 AFTER K FROM K-LOW BY 10 UNTIL K > M
PERFORM_PROC_1_WITH_TEST_BEFORE_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_5_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_K_LOW_BY_10_UNTIL_K_OP_GREATER_M.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performVarying WITH TEST BEFORE VARYING (identifier N) FROM (identifier N-LOW) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (literal (numericLiteral -10)) BY (literal (numericLiteral 5)) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20)))))) (performVaryingAfterPhrase AFTER (identifier K) FROM (identifier K-LOW) BY (literal (numericLiteral 10)) UNTIL (conditionalExpression (relationCondition (operand (identifier K)) (relation >) (operand (identifier M)))))))

PERFORM_PROC_1_WITH_TEST_AFTER_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 WITH TEST AFTER VARYING N FROM N-LOW BY -2 UNTIL N < 0
PERFORM_PROC_1_WITH_TEST_AFTER_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performVarying WITH TEST AFTER VARYING (identifier N) FROM (identifier N-LOW) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))


PERFORM_PROC_1_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 VARYING N FROM 0 BY N-STEP UNTIL N < 0
PERFORM_PROC_1_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performVarying VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))

PERFORM_PROC_1_WITH_TEST_BEFORE_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_5_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_0_BY_K_STEP_UNTIL_K_OP_GREATER_M.source=PERFORM PROC-1 WITH TEST BEFORE VARYING N FROM 0 BY N-STEP UNTIL N < 0 AFTER M FROM M-LOW BY 5 UNTIL M = 20 AFTER K FROM 0 BY K-STEP UNTIL K > M
PERFORM_PROC_1_WITH_TEST_BEFORE_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_5_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_0_BY_K_STEP_UNTIL_K_OP_GREATER_M.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performVarying WITH TEST BEFORE VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (identifier M-LOW) BY (literal (numericLiteral 5)) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20)))))) (performVaryingAfterPhrase AFTER (identifier K) FROM (literal (numericLiteral 0)) BY (identifier K-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier K)) (relation >) (operand (identifier M)))))))

PERFORM_PROC_1_WITH_TEST_AFTER_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_M_STEP_UNTIL_M_OP_EQUAL_20.source=PERFORM PROC-1 WITH TEST AFTER VARYING N FROM 0 BY N-STEP UNTIL N < 0 AFTER M FROM -10 BY M-STEP UNTIL M = 20
PERFORM_PROC_1_WITH_TEST_AFTER_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_M_STEP_UNTIL_M_OP_EQUAL_20.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performVarying WITH TEST AFTER VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (literal (numericLiteral -10)) BY (identifier M-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20))))))))

PERFORM_PROC_1_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 VARYING N FROM 0 BY -2 UNTIL N < 0
PERFORM_PROC_1_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performVarying VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))

PERFORM_PROC_1_WITH_TEST_BEFORE_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_5_UNTIL_M_OP_EQUAL_20.source=PERFORM PROC-1 WITH TEST BEFORE VARYING N FROM 0 BY -2 UNTIL N < 0 AFTER M FROM -10 BY 5 UNTIL M = 20
PERFORM_PROC_1_WITH_TEST_BEFORE_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_5_UNTIL_M_OP_EQUAL_20.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performVarying WITH TEST BEFORE VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (literal (numericLiteral -10)) BY (literal (numericLiteral 5)) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20))))))))

PERFORM_PROC_1_WITH_TEST_AFTER_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_M_STEP_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_0_BY_10_UNTIL_K_OP_GREATER_M.source=PERFORM PROC-1 WITH TEST AFTER VARYING N FROM 0 BY -2 UNTIL N < 0 AFTER M FROM M-LOW BY M-STEP UNTIL M = 20 AFTER K FROM 0 BY 10 UNTIL K > M
PERFORM_PROC_1_WITH_TEST_AFTER_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_M_STEP_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_0_BY_10_UNTIL_K_OP_GREATER_M.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) (performVarying WITH TEST AFTER VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (identifier M-LOW) BY (identifier M-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20)))))) (performVaryingAfterPhrase AFTER (identifier K) FROM (literal (numericLiteral 0)) BY (literal (numericLiteral 10)) UNTIL (conditionalExpression (relationCondition (operand (identifier K)) (relation >) (operand (identifier M)))))))


PERFORM_PROC_1_THRU_PROC_2_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_M_STEP_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_0_BY_10_UNTIL_K_OP_GREATER_M.source=PERFORM PROC-1 THRU PROC-2 VARYING N FROM N-LOW BY N-STEP UNTIL N < 0 AFTER M FROM -10 BY M-STEP UNTIL M = 20 AFTER K FROM 0 BY 10 UNTIL K > M
PERFORM_PROC_1_THRU_PROC_2_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_M_STEP_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_0_BY_10_UNTIL_K_OP_GREATER_M.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performVarying VARYING (identifier N) FROM (identifier N-LOW) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (literal (numericLiteral -10)) BY (identifier M-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20)))))) (performVaryingAfterPhrase AFTER (identifier K) FROM (literal (numericLiteral 0)) BY (literal (numericLiteral 10)) UNTIL (conditionalExpression (relationCondition (operand (identifier K)) (relation >) (operand (identifier M)))))))

PERFORM_PROC_1_THRU_PROC_2_TEST_BEFORE_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_5_UNTIL_M_OP_EQUAL_20.source=PERFORM PROC-1 THRU PROC-2 TEST BEFORE VARYING N FROM N-LOW BY N-STEP UNTIL N < 0 AFTER M FROM -10 BY 5 UNTIL M = 20
PERFORM_PROC_1_THRU_PROC_2_TEST_BEFORE_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_5_UNTIL_M_OP_EQUAL_20.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performVarying TEST BEFORE VARYING (identifier N) FROM (identifier N-LOW) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (literal (numericLiteral -10)) BY (literal (numericLiteral 5)) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20))))))))

PERFORM_PROC_1_THRU_PROC_2_TEST_AFTER_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 THRU PROC-2 TEST AFTER VARYING N FROM N-LOW BY N-STEP UNTIL N < 0
PERFORM_PROC_1_THRU_PROC_2_TEST_AFTER_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performVarying TEST AFTER VARYING (identifier N) FROM (identifier N-LOW) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))

PERFORM_PROC_1_THRU_PROC_2_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_M_STEP_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_0_BY_K_STEP_UNTIL_K_OP_GREATER_M.source=PERFORM PROC-1 THRU PROC-2 VARYING N FROM N-LOW BY -2 UNTIL N < 0 AFTER M FROM M-LOW BY M-STEP UNTIL M = 20 AFTER K FROM 0 BY K-STEP UNTIL K > M
PERFORM_PROC_1_THRU_PROC_2_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_M_STEP_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_0_BY_K_STEP_UNTIL_K_OP_GREATER_M.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performVarying VARYING (identifier N) FROM (identifier N-LOW) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (identifier M-LOW) BY (identifier M-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20)))))) (performVaryingAfterPhrase AFTER (identifier K) FROM (literal (numericLiteral 0)) BY (identifier K-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier K)) (relation >) (operand (identifier M)))))))

PERFORM_PROC_1_THRU_PROC_2_TEST_BEFORE_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 THRU PROC-2 TEST BEFORE VARYING N FROM N-LOW BY -2 UNTIL N < 0
PERFORM_PROC_1_THRU_PROC_2_TEST_BEFORE_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performVarying TEST BEFORE VARYING (identifier N) FROM (identifier N-LOW) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))

PERFORM_PROC_1_THRU_PROC_2_TEST_AFTER_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_5_UNTIL_M_OP_EQUAL_20.source=PERFORM PROC-1 THRU PROC-2 TEST AFTER VARYING N FROM N-LOW BY -2 UNTIL N < 0 AFTER M FROM M-LOW BY 5 UNTIL M = 20
PERFORM_PROC_1_THRU_PROC_2_TEST_AFTER_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_5_UNTIL_M_OP_EQUAL_20.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performVarying TEST AFTER VARYING (identifier N) FROM (identifier N-LOW) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (identifier M-LOW) BY (literal (numericLiteral 5)) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20))))))))


PERFORM_PROC_1_THRU_PROC_2_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_5_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_K_LOW_BY_10_UNTIL_K_OP_GREATER_M.source=PERFORM PROC-1 THRU PROC-2 VARYING N FROM 0 BY N-STEP UNTIL N < 0 AFTER M FROM -10 BY 5 UNTIL M = 20 AFTER K FROM K-LOW BY 10 UNTIL K > M
PERFORM_PROC_1_THRU_PROC_2_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_5_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_K_LOW_BY_10_UNTIL_K_OP_GREATER_M.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performVarying VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (literal (numericLiteral -10)) BY (literal (numericLiteral 5)) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20)))))) (performVaryingAfterPhrase AFTER (identifier K) FROM (identifier K-LOW) BY (literal (numericLiteral 10)) UNTIL (conditionalExpression (relationCondition (operand (identifier K)) (relation >) (operand (identifier M)))))))

PERFORM_PROC_1_THRU_PROC_2_TEST_BEFORE_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 THRU PROC-2 TEST BEFORE VARYING N FROM 0 BY N-STEP UNTIL N < 0
PERFORM_PROC_1_THRU_PROC_2_TEST_BEFORE_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performVarying TEST BEFORE VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))

PERFORM_PROC_1_THRU_PROC_2_TEST_AFTER_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_M_STEP_UNTIL_M_OP_EQUAL_20.source=PERFORM PROC-1 THRU PROC-2 TEST AFTER VARYING N FROM 0 BY N-STEP UNTIL N < 0 AFTER M FROM M-LOW BY M-STEP UNTIL M = 20
PERFORM_PROC_1_THRU_PROC_2_TEST_AFTER_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_M_STEP_UNTIL_M_OP_EQUAL_20.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performVarying TEST AFTER VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (identifier M-LOW) BY (identifier M-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20))))))))

PERFORM_PROC_1_THRU_PROC_2_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_5_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_K_LOW_BY_K_STEP_UNTIL_K_OP_GREATER_M.source=PERFORM PROC-1 THRU PROC-2 VARYING N FROM 0 BY -2 UNTIL N < 0 AFTER M FROM M-LOW BY 5 UNTIL M = 20 AFTER K FROM K-LOW BY K-STEP UNTIL K > M
PERFORM_PROC_1_THRU_PROC_2_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM_M_LOW_BY_5_UNTIL_M_OP_EQUAL_20_AFTER_K_FROM_K_LOW_BY_K_STEP_UNTIL_K_OP_GREATER_M.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performVarying VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (identifier M-LOW) BY (literal (numericLiteral 5)) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20)))))) (performVaryingAfterPhrase AFTER (identifier K) FROM (identifier K-LOW) BY (identifier K-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier K)) (relation >) (operand (identifier M)))))))

PERFORM_PROC_1_THRU_PROC_2_TEST_BEFORE_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_M_STEP_UNTIL_M_OP_EQUAL_20.source=PERFORM PROC-1 THRU PROC-2 TEST BEFORE VARYING N FROM 0 BY -2 UNTIL N < 0 AFTER M FROM -10 BY M-STEP UNTIL M = 20
PERFORM_PROC_1_THRU_PROC_2_TEST_BEFORE_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0_AFTER_M_FROM__10_BY_M_STEP_UNTIL_M_OP_EQUAL_20.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performVarying TEST BEFORE VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (performVaryingAfterPhrase AFTER (identifier M) FROM (literal (numericLiteral -10)) BY (identifier M-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier M)) (relation =) (operand (literal (numericLiteral 20))))))))

PERFORM_PROC_1_THRU_PROC_2_TEST_AFTER_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0.source=PERFORM PROC-1 THRU PROC-2 TEST AFTER VARYING N FROM 0 BY -2 UNTIL N < 0
PERFORM_PROC_1_THRU_PROC_2_TEST_AFTER_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0.tree=(proceduralStatement (stmtPERFORMimperative PERFORM (procedureName (sectionName PROC-1)) THRU (procedureName (sectionName PROC-2)) (performVarying TEST AFTER VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0))))))))


PERFORM_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM STOP RUN STOP RUN END-PERFORM
PERFORM_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

PERFORM_N_TIMES_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM N TIMES STOP RUN STOP RUN END-PERFORM
PERFORM_N_TIMES_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (performTimes (identifier N) TIMES) (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

PERFORM_10_TIMES_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM 10 TIMES STOP RUN STOP RUN END-PERFORM
PERFORM_10_TIMES_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (performTimes 10 TIMES) (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

PERFORM_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM UNTIL N < 0 STOP RUN STOP RUN END-PERFORM
PERFORM_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (performUntil UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

PERFORM_WITH_TEST_BEFORE_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM WITH TEST BEFORE UNTIL N < 0 STOP RUN STOP RUN END-PERFORM
PERFORM_WITH_TEST_BEFORE_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (performUntil WITH TEST BEFORE UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

PERFORM_WITH_TEST_AFTER_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM WITH TEST AFTER UNTIL N < 0 STOP RUN STOP RUN END-PERFORM
PERFORM_WITH_TEST_AFTER_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (performUntil WITH TEST AFTER UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

PERFORM_WITH_TEST_BEFORE_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM WITH TEST BEFORE VARYING N FROM N-LOW BY N-STEP UNTIL N < 0 STOP RUN STOP RUN END-PERFORM
PERFORM_WITH_TEST_BEFORE_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (performVarying WITH TEST BEFORE VARYING (identifier N) FROM (identifier N-LOW) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

PERFORM_WITH_TEST_AFTER_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM WITH TEST AFTER VARYING N FROM N-LOW BY -2 UNTIL N < 0 STOP RUN STOP RUN END-PERFORM
PERFORM_WITH_TEST_AFTER_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (performVarying WITH TEST AFTER VARYING (identifier N) FROM (identifier N-LOW) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

PERFORM_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM VARYING N FROM 0 BY N-STEP UNTIL N < 0 STOP RUN STOP RUN END-PERFORM
PERFORM_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (performVarying VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

PERFORM_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM VARYING N FROM 0 BY -2 UNTIL N < 0 STOP RUN STOP RUN END-PERFORM
PERFORM_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (performVarying VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

PERFORM_TEST_AFTER_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM TEST AFTER VARYING N FROM N-LOW BY N-STEP UNTIL N < 0 STOP RUN STOP RUN END-PERFORM
PERFORM_TEST_AFTER_VARYING_N_FROM_N_LOW_BY_N_STEP_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (performVarying TEST AFTER VARYING (identifier N) FROM (identifier N-LOW) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

PERFORM_TEST_BEFORE_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM TEST BEFORE VARYING N FROM N-LOW BY -2 UNTIL N < 0 STOP RUN STOP RUN END-PERFORM
PERFORM_TEST_BEFORE_VARYING_N_FROM_N_LOW_BY__2_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (performVarying TEST BEFORE VARYING (identifier N) FROM (identifier N-LOW) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

PERFORM_TEST_BEFORE_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM TEST BEFORE VARYING N FROM 0 BY N-STEP UNTIL N < 0 STOP RUN STOP RUN END-PERFORM
PERFORM_TEST_BEFORE_VARYING_N_FROM_0_BY_N_STEP_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (performVarying TEST BEFORE VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (identifier N-STEP) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

PERFORM_TEST_AFTER_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.source=PERFORM TEST AFTER VARYING N FROM 0 BY -2 UNTIL N < 0 STOP RUN STOP RUN END-PERFORM
PERFORM_TEST_AFTER_VARYING_N_FROM_0_BY__2_UNTIL_N_OP_LESS_0_STOP_RUN_STOP_RUN_END_PERFORM.tree=(proceduralStatement (stmtPERFORMdelimitedScope PERFORM (performVarying TEST AFTER VARYING (identifier N) FROM (literal (numericLiteral 0)) BY (literal (numericLiteral -2)) UNTIL (conditionalExpression (relationCondition (operand (identifier N)) (relation <) (operand (literal (numericLiteral 0)))))) (proceduralStatement (stmtSTOPRUN STOP RUN)) (proceduralStatement (stmtSTOPRUN STOP RUN)) END-PERFORM))

