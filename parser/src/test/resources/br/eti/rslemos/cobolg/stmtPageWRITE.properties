# BEGIN COPYRIGHT NOTICE
# 
# This file is part of program "cobolg"
# Copyright 2016  Rodrigo Lemos
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# END COPYRIGHT NOTICE


WRITE_REC.source=WRITE REC
WRITE_REC.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC)) stmtPageWRITEtail)

WRITE_REC_FROM_X.source=WRITE REC FROM X
WRITE_REC_FROM_X.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X)) stmtPageWRITEtail)

WRITE_REC_BEFORE_1_LINE.source=WRITE REC BEFORE 1 LINE
WRITE_REC_BEFORE_1_LINE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE (literal (numericLiteral 1)) LINE) stmtPageWRITEtail)

WRITE_REC_BEFORE_N_LINES.source=WRITE REC BEFORE N LINES
WRITE_REC_BEFORE_N_LINES.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE (identifier N) LINES) stmtPageWRITEtail)

WRITE_REC_BEFORE_LCP_CH2.source=WRITE REC BEFORE LCP-CH2
WRITE_REC_BEFORE_LCP_CH2.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE (mnemonicName LCP-CH2)) stmtPageWRITEtail)

WRITE_REC_BEFORE_PAGE.source=WRITE REC BEFORE PAGE
WRITE_REC_BEFORE_PAGE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE PAGE) stmtPageWRITEtail)

WRITE_REC_BEFORE_ADVANCING_1_LINE.source=WRITE REC BEFORE ADVANCING 1 LINE
WRITE_REC_BEFORE_ADVANCING_1_LINE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING (literal (numericLiteral 1)) LINE) stmtPageWRITEtail)

WRITE_REC_BEFORE_ADVANCING_N_LINES.source=WRITE REC BEFORE ADVANCING N LINES
WRITE_REC_BEFORE_ADVANCING_N_LINES.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING (identifier N) LINES) stmtPageWRITEtail)

WRITE_REC_BEFORE_ADVANCING_LCP_CH2.source=WRITE REC BEFORE ADVANCING LCP-CH2
WRITE_REC_BEFORE_ADVANCING_LCP_CH2.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING (mnemonicName LCP-CH2)) stmtPageWRITEtail)

WRITE_REC_BEFORE_ADVANCING_PAGE.source=WRITE REC BEFORE ADVANCING PAGE
WRITE_REC_BEFORE_ADVANCING_PAGE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING PAGE) stmtPageWRITEtail)

WRITE_REC_AFTER_1_LINE.source=WRITE REC AFTER 1 LINE
WRITE_REC_AFTER_1_LINE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER (literal (numericLiteral 1)) LINE) stmtPageWRITEtail)

WRITE_REC_AFTER_N_LINES.source=WRITE REC AFTER N LINES
WRITE_REC_AFTER_N_LINES.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER (identifier N) LINES) stmtPageWRITEtail)

WRITE_REC_AFTER_LCP_CH2.source=WRITE REC AFTER LCP-CH2
WRITE_REC_AFTER_LCP_CH2.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER (mnemonicName LCP-CH2)) stmtPageWRITEtail)

WRITE_REC_AFTER_PAGE.source=WRITE REC AFTER PAGE
WRITE_REC_AFTER_PAGE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER PAGE) stmtPageWRITEtail)

WRITE_REC_AFTER_ADVANCING_1_LINE.source=WRITE REC AFTER ADVANCING 1 LINE
WRITE_REC_AFTER_ADVANCING_1_LINE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING (literal (numericLiteral 1)) LINE) stmtPageWRITEtail)

WRITE_REC_AFTER_ADVANCING_N_LINES.source=WRITE REC AFTER ADVANCING N LINES
WRITE_REC_AFTER_ADVANCING_N_LINES.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING (identifier N) LINES) stmtPageWRITEtail)

WRITE_REC_AFTER_ADVANCING_LCP_CH2.source=WRITE REC AFTER ADVANCING LCP-CH2
WRITE_REC_AFTER_ADVANCING_LCP_CH2.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING (mnemonicName LCP-CH2)) stmtPageWRITEtail)

WRITE_REC_AFTER_ADVANCING_PAGE.source=WRITE REC AFTER ADVANCING PAGE
WRITE_REC_AFTER_ADVANCING_PAGE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING PAGE) stmtPageWRITEtail)

WRITE_REC_FROM_X_BEFORE_1_LINE.source=WRITE REC FROM X BEFORE 1 LINE
WRITE_REC_FROM_X_BEFORE_1_LINE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE (literal (numericLiteral 1)) LINE) stmtPageWRITEtail)

WRITE_REC_FROM_X_BEFORE_N_LINES.source=WRITE REC FROM X BEFORE N LINES
WRITE_REC_FROM_X_BEFORE_N_LINES.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE (identifier N) LINES) stmtPageWRITEtail)

WRITE_REC_FROM_X_BEFORE_LCP_CH2.source=WRITE REC FROM X BEFORE LCP-CH2
WRITE_REC_FROM_X_BEFORE_LCP_CH2.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE (mnemonicName LCP-CH2)) stmtPageWRITEtail)

WRITE_REC_FROM_X_BEFORE_PAGE.source=WRITE REC FROM X BEFORE PAGE
WRITE_REC_FROM_X_BEFORE_PAGE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE PAGE) stmtPageWRITEtail)

WRITE_REC_FROM_X_BEFORE_ADVANCING_1_LINE.source=WRITE REC FROM X BEFORE ADVANCING 1 LINE
WRITE_REC_FROM_X_BEFORE_ADVANCING_1_LINE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING (literal (numericLiteral 1)) LINE) stmtPageWRITEtail)

WRITE_REC_FROM_X_BEFORE_ADVANCING_N_LINES.source=WRITE REC FROM X BEFORE ADVANCING N LINES
WRITE_REC_FROM_X_BEFORE_ADVANCING_N_LINES.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING (identifier N) LINES) stmtPageWRITEtail)

WRITE_REC_FROM_X_BEFORE_ADVANCING_LCP_CH2.source=WRITE REC FROM X BEFORE ADVANCING LCP-CH2
WRITE_REC_FROM_X_BEFORE_ADVANCING_LCP_CH2.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING (mnemonicName LCP-CH2)) stmtPageWRITEtail)

WRITE_REC_FROM_X_BEFORE_ADVANCING_PAGE.source=WRITE REC FROM X BEFORE ADVANCING PAGE
WRITE_REC_FROM_X_BEFORE_ADVANCING_PAGE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING PAGE) stmtPageWRITEtail)

WRITE_REC_FROM_X_AFTER_1_LINE.source=WRITE REC FROM X AFTER 1 LINE
WRITE_REC_FROM_X_AFTER_1_LINE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER (literal (numericLiteral 1)) LINE) stmtPageWRITEtail)

WRITE_REC_FROM_X_AFTER_N_LINES.source=WRITE REC FROM X AFTER N LINES
WRITE_REC_FROM_X_AFTER_N_LINES.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER (identifier N) LINES) stmtPageWRITEtail)

WRITE_REC_FROM_X_AFTER_LCP_CH2.source=WRITE REC FROM X AFTER LCP-CH2
WRITE_REC_FROM_X_AFTER_LCP_CH2.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER (mnemonicName LCP-CH2)) stmtPageWRITEtail)

WRITE_REC_FROM_X_AFTER_PAGE.source=WRITE REC FROM X AFTER PAGE
WRITE_REC_FROM_X_AFTER_PAGE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER PAGE) stmtPageWRITEtail)

WRITE_REC_FROM_X_AFTER_ADVANCING_1_LINE.source=WRITE REC FROM X AFTER ADVANCING 1 LINE
WRITE_REC_FROM_X_AFTER_ADVANCING_1_LINE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING (literal (numericLiteral 1)) LINE) stmtPageWRITEtail)

WRITE_REC_FROM_X_AFTER_ADVANCING_N_LINES.source=WRITE REC FROM X AFTER ADVANCING N LINES
WRITE_REC_FROM_X_AFTER_ADVANCING_N_LINES.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING (identifier N) LINES) stmtPageWRITEtail)

WRITE_REC_FROM_X_AFTER_ADVANCING_LCP_CH2.source=WRITE REC FROM X AFTER ADVANCING LCP-CH2
WRITE_REC_FROM_X_AFTER_ADVANCING_LCP_CH2.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING (mnemonicName LCP-CH2)) stmtPageWRITEtail)

WRITE_REC_FROM_X_AFTER_ADVANCING_PAGE.source=WRITE REC FROM X AFTER ADVANCING PAGE
WRITE_REC_FROM_X_AFTER_ADVANCING_PAGE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING PAGE) stmtPageWRITEtail)


WRITE_REC_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_BEFORE_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC BEFORE 1 LINE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_BEFORE_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_BEFORE_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC BEFORE N LINES EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_BEFORE_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_BEFORE_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC BEFORE LCP-CH2 EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_BEFORE_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_BEFORE_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC BEFORE PAGE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_BEFORE_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_BEFORE_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC BEFORE ADVANCING 1 LINE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_BEFORE_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_BEFORE_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC BEFORE ADVANCING N LINES EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_BEFORE_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_BEFORE_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC BEFORE ADVANCING LCP-CH2 EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_BEFORE_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_BEFORE_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC BEFORE ADVANCING PAGE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_BEFORE_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_AFTER_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC AFTER 1 LINE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_AFTER_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_AFTER_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC AFTER N LINES EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_AFTER_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_AFTER_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC AFTER LCP-CH2 EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_AFTER_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_AFTER_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC AFTER PAGE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_AFTER_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_AFTER_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC AFTER ADVANCING 1 LINE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_AFTER_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_AFTER_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC AFTER ADVANCING N LINES EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_AFTER_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_AFTER_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC AFTER ADVANCING LCP-CH2 EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_AFTER_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_AFTER_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC AFTER ADVANCING PAGE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_AFTER_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_BEFORE_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X BEFORE 1 LINE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_BEFORE_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_BEFORE_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X BEFORE N LINES EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_BEFORE_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_BEFORE_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X BEFORE LCP-CH2 EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_BEFORE_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_BEFORE_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X BEFORE PAGE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_BEFORE_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_BEFORE_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X BEFORE ADVANCING 1 LINE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_BEFORE_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_BEFORE_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X BEFORE ADVANCING N LINES EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_BEFORE_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_BEFORE_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X BEFORE ADVANCING LCP-CH2 EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_BEFORE_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_BEFORE_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X BEFORE ADVANCING PAGE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_BEFORE_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_AFTER_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X AFTER 1 LINE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_AFTER_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_AFTER_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X AFTER N LINES EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_AFTER_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_AFTER_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X AFTER LCP-CH2 EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_AFTER_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_AFTER_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X AFTER PAGE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_AFTER_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_AFTER_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X AFTER ADVANCING 1 LINE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_AFTER_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_AFTER_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X AFTER ADVANCING N LINES EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_AFTER_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_AFTER_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X AFTER ADVANCING LCP-CH2 EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_AFTER_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))

WRITE_REC_FROM_X_AFTER_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.source=WRITE REC FROM X AFTER ADVANCING PAGE EOP STOP RUN NOT EOP STOP RUN
WRITE_REC_FROM_X_AFTER_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN))))))


WRITE_REC_END_WRITE.source=WRITE REC END-WRITE
WRITE_REC_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC)) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_END_WRITE.source=WRITE REC FROM X END-WRITE
WRITE_REC_FROM_X_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X)) (stmtPageWRITEtail END-WRITE))

WRITE_REC_BEFORE_1_LINE_END_WRITE.source=WRITE REC BEFORE 1 LINE END-WRITE
WRITE_REC_BEFORE_1_LINE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_BEFORE_N_LINES_END_WRITE.source=WRITE REC BEFORE N LINES END-WRITE
WRITE_REC_BEFORE_N_LINES_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE (identifier N) LINES) (stmtPageWRITEtail END-WRITE))

WRITE_REC_BEFORE_LCP_CH2_END_WRITE.source=WRITE REC BEFORE LCP-CH2 END-WRITE
WRITE_REC_BEFORE_LCP_CH2_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE (mnemonicName LCP-CH2)) (stmtPageWRITEtail END-WRITE))

WRITE_REC_BEFORE_PAGE_END_WRITE.source=WRITE REC BEFORE PAGE END-WRITE
WRITE_REC_BEFORE_PAGE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE PAGE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_BEFORE_ADVANCING_1_LINE_END_WRITE.source=WRITE REC BEFORE ADVANCING 1 LINE END-WRITE
WRITE_REC_BEFORE_ADVANCING_1_LINE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_BEFORE_ADVANCING_N_LINES_END_WRITE.source=WRITE REC BEFORE ADVANCING N LINES END-WRITE
WRITE_REC_BEFORE_ADVANCING_N_LINES_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING (identifier N) LINES) (stmtPageWRITEtail END-WRITE))

WRITE_REC_BEFORE_ADVANCING_LCP_CH2_END_WRITE.source=WRITE REC BEFORE ADVANCING LCP-CH2 END-WRITE
WRITE_REC_BEFORE_ADVANCING_LCP_CH2_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING (mnemonicName LCP-CH2)) (stmtPageWRITEtail END-WRITE))

WRITE_REC_BEFORE_ADVANCING_PAGE_END_WRITE.source=WRITE REC BEFORE ADVANCING PAGE END-WRITE
WRITE_REC_BEFORE_ADVANCING_PAGE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING PAGE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_AFTER_1_LINE_END_WRITE.source=WRITE REC AFTER 1 LINE END-WRITE
WRITE_REC_AFTER_1_LINE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_AFTER_N_LINES_END_WRITE.source=WRITE REC AFTER N LINES END-WRITE
WRITE_REC_AFTER_N_LINES_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER (identifier N) LINES) (stmtPageWRITEtail END-WRITE))

WRITE_REC_AFTER_LCP_CH2_END_WRITE.source=WRITE REC AFTER LCP-CH2 END-WRITE
WRITE_REC_AFTER_LCP_CH2_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER (mnemonicName LCP-CH2)) (stmtPageWRITEtail END-WRITE))

WRITE_REC_AFTER_PAGE_END_WRITE.source=WRITE REC AFTER PAGE END-WRITE
WRITE_REC_AFTER_PAGE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER PAGE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_AFTER_ADVANCING_1_LINE_END_WRITE.source=WRITE REC AFTER ADVANCING 1 LINE END-WRITE
WRITE_REC_AFTER_ADVANCING_1_LINE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_AFTER_ADVANCING_N_LINES_END_WRITE.source=WRITE REC AFTER ADVANCING N LINES END-WRITE
WRITE_REC_AFTER_ADVANCING_N_LINES_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING (identifier N) LINES) (stmtPageWRITEtail END-WRITE))

WRITE_REC_AFTER_ADVANCING_LCP_CH2_END_WRITE.source=WRITE REC AFTER ADVANCING LCP-CH2 END-WRITE
WRITE_REC_AFTER_ADVANCING_LCP_CH2_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING (mnemonicName LCP-CH2)) (stmtPageWRITEtail END-WRITE))

WRITE_REC_AFTER_ADVANCING_PAGE_END_WRITE.source=WRITE REC AFTER ADVANCING PAGE END-WRITE
WRITE_REC_AFTER_ADVANCING_PAGE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING PAGE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_BEFORE_1_LINE_END_WRITE.source=WRITE REC FROM X BEFORE 1 LINE END-WRITE
WRITE_REC_FROM_X_BEFORE_1_LINE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_BEFORE_N_LINES_END_WRITE.source=WRITE REC FROM X BEFORE N LINES END-WRITE
WRITE_REC_FROM_X_BEFORE_N_LINES_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE (identifier N) LINES) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_BEFORE_LCP_CH2_END_WRITE.source=WRITE REC FROM X BEFORE LCP-CH2 END-WRITE
WRITE_REC_FROM_X_BEFORE_LCP_CH2_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE (mnemonicName LCP-CH2)) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_BEFORE_PAGE_END_WRITE.source=WRITE REC FROM X BEFORE PAGE END-WRITE
WRITE_REC_FROM_X_BEFORE_PAGE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE PAGE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_BEFORE_ADVANCING_1_LINE_END_WRITE.source=WRITE REC FROM X BEFORE ADVANCING 1 LINE END-WRITE
WRITE_REC_FROM_X_BEFORE_ADVANCING_1_LINE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_BEFORE_ADVANCING_N_LINES_END_WRITE.source=WRITE REC FROM X BEFORE ADVANCING N LINES END-WRITE
WRITE_REC_FROM_X_BEFORE_ADVANCING_N_LINES_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING (identifier N) LINES) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_BEFORE_ADVANCING_LCP_CH2_END_WRITE.source=WRITE REC FROM X BEFORE ADVANCING LCP-CH2 END-WRITE
WRITE_REC_FROM_X_BEFORE_ADVANCING_LCP_CH2_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING (mnemonicName LCP-CH2)) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_BEFORE_ADVANCING_PAGE_END_WRITE.source=WRITE REC FROM X BEFORE ADVANCING PAGE END-WRITE
WRITE_REC_FROM_X_BEFORE_ADVANCING_PAGE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING PAGE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_AFTER_1_LINE_END_WRITE.source=WRITE REC FROM X AFTER 1 LINE END-WRITE
WRITE_REC_FROM_X_AFTER_1_LINE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_AFTER_N_LINES_END_WRITE.source=WRITE REC FROM X AFTER N LINES END-WRITE
WRITE_REC_FROM_X_AFTER_N_LINES_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER (identifier N) LINES) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_AFTER_LCP_CH2_END_WRITE.source=WRITE REC FROM X AFTER LCP-CH2 END-WRITE
WRITE_REC_FROM_X_AFTER_LCP_CH2_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER (mnemonicName LCP-CH2)) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_AFTER_PAGE_END_WRITE.source=WRITE REC FROM X AFTER PAGE END-WRITE
WRITE_REC_FROM_X_AFTER_PAGE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER PAGE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_AFTER_ADVANCING_1_LINE_END_WRITE.source=WRITE REC FROM X AFTER ADVANCING 1 LINE END-WRITE
WRITE_REC_FROM_X_AFTER_ADVANCING_1_LINE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_AFTER_ADVANCING_N_LINES_END_WRITE.source=WRITE REC FROM X AFTER ADVANCING N LINES END-WRITE
WRITE_REC_FROM_X_AFTER_ADVANCING_N_LINES_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING (identifier N) LINES) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_AFTER_ADVANCING_LCP_CH2_END_WRITE.source=WRITE REC FROM X AFTER ADVANCING LCP-CH2 END-WRITE
WRITE_REC_FROM_X_AFTER_ADVANCING_LCP_CH2_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING (mnemonicName LCP-CH2)) (stmtPageWRITEtail END-WRITE))

WRITE_REC_FROM_X_AFTER_ADVANCING_PAGE_END_WRITE.source=WRITE REC FROM X AFTER ADVANCING PAGE END-WRITE
WRITE_REC_FROM_X_AFTER_ADVANCING_PAGE_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING PAGE) (stmtPageWRITEtail END-WRITE))


WRITE_REC_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_BEFORE_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC BEFORE 1 LINE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_BEFORE_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_BEFORE_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC BEFORE N LINES EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_BEFORE_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_BEFORE_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC BEFORE LCP-CH2 EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_BEFORE_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_BEFORE_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC BEFORE PAGE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_BEFORE_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_BEFORE_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC BEFORE ADVANCING 1 LINE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_BEFORE_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_BEFORE_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC BEFORE ADVANCING N LINES EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_BEFORE_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_BEFORE_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC BEFORE ADVANCING LCP-CH2 EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_BEFORE_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_BEFORE_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC BEFORE ADVANCING PAGE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_BEFORE_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) BEFORE ADVANCING PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_AFTER_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC AFTER 1 LINE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_AFTER_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_AFTER_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC AFTER N LINES EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_AFTER_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_AFTER_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC AFTER LCP-CH2 EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_AFTER_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_AFTER_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC AFTER PAGE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_AFTER_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_AFTER_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC AFTER ADVANCING 1 LINE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_AFTER_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_AFTER_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC AFTER ADVANCING N LINES EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_AFTER_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_AFTER_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC AFTER ADVANCING LCP-CH2 EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_AFTER_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_AFTER_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC AFTER ADVANCING PAGE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_AFTER_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) AFTER ADVANCING PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_BEFORE_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X BEFORE 1 LINE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_BEFORE_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_BEFORE_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X BEFORE N LINES EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_BEFORE_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_BEFORE_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X BEFORE LCP-CH2 EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_BEFORE_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_BEFORE_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X BEFORE PAGE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_BEFORE_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_BEFORE_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X BEFORE ADVANCING 1 LINE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_BEFORE_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_BEFORE_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X BEFORE ADVANCING N LINES EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_BEFORE_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_BEFORE_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X BEFORE ADVANCING LCP-CH2 EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_BEFORE_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_BEFORE_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X BEFORE ADVANCING PAGE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_BEFORE_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) BEFORE ADVANCING PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_AFTER_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X AFTER 1 LINE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_AFTER_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_AFTER_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X AFTER N LINES EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_AFTER_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_AFTER_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X AFTER LCP-CH2 EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_AFTER_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_AFTER_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X AFTER PAGE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_AFTER_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_AFTER_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X AFTER ADVANCING 1 LINE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_AFTER_ADVANCING_1_LINE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING (literal (numericLiteral 1)) LINE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_AFTER_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X AFTER ADVANCING N LINES EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_AFTER_ADVANCING_N_LINES_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING (identifier N) LINES) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_AFTER_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X AFTER ADVANCING LCP-CH2 EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_AFTER_ADVANCING_LCP_CH2_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING (mnemonicName LCP-CH2)) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))

WRITE_REC_FROM_X_AFTER_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.source=WRITE REC FROM X AFTER ADVANCING PAGE EOP STOP RUN NOT EOP STOP RUN END-WRITE
WRITE_REC_FROM_X_AFTER_ADVANCING_PAGE_EOP_STOP_RUN_NOT_EOP_STOP_RUN_END_WRITE.tree=(stmtPageWRITE (stmtPageWRITEimperative WRITE (recordName REC) FROM (identifier X) AFTER ADVANCING PAGE) (stmtPageWRITEtail (atEndOfPagePhrases (atEndOfPagePhrase EOP (proceduralStatement (stmtSTOPRUN STOP RUN))) (notAtEndOfPagePhrase NOT EOP (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE))
