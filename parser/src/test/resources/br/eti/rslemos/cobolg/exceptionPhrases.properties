# BEGIN COPYRIGHT NOTICE
# 
# This file is part of program "cobolg"
# Copyright 2016  Rodrigo Lemos
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# EXCEPTION COPYRIGHT NOTICE

$.source=
$.tree=exceptionPhrases

ON_EXCEPTION_STOP_RUN.source=ON EXCEPTION STOP RUN
ON_EXCEPTION_STOP_RUN.tree=(exceptionPhrases (onExceptionPhrase ON EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))

NOT_ON_EXCEPTION_STOP_RUN.source=NOT ON EXCEPTION STOP RUN
NOT_ON_EXCEPTION_STOP_RUN.tree=(exceptionPhrases (notOnExceptionPhrase NOT ON EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))

ON_EXCEPTION_STOP_RUN_NOT_ON_EXCEPTION_STOP_RUN.source=ON EXCEPTION STOP RUN NOT ON EXCEPTION STOP RUN
ON_EXCEPTION_STOP_RUN_NOT_ON_EXCEPTION_STOP_RUN.tree=(exceptionPhrases (onExceptionPhrase ON EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))) (notOnExceptionPhrase NOT ON EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))

EXCEPTION_STOP_RUN.source=EXCEPTION STOP RUN
EXCEPTION_STOP_RUN.tree=(exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))

NOT_EXCEPTION_STOP_RUN.source=NOT EXCEPTION STOP RUN
NOT_EXCEPTION_STOP_RUN.tree=(exceptionPhrases (notOnExceptionPhrase NOT EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))

EXCEPTION_STOP_RUN_NOT_EXCEPTION_STOP_RUN.source=EXCEPTION STOP RUN NOT EXCEPTION STOP RUN
EXCEPTION_STOP_RUN_NOT_EXCEPTION_STOP_RUN.tree=(exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))) (notOnExceptionPhrase NOT EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))
