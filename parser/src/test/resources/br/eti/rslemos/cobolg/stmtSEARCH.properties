# BEGIN COPYRIGHT NOTICE
# 
# This file is part of program "cobolg"
# Copyright 2016  Rodrigo Lemos
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# END COPYRIGHT NOTICE

SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_STOP_RUN.source=SEARCH X-1 VARYING I WHEN CONDITION-2 STOP RUN
SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_STOP_RUN.tree=(proceduralStatement (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) (proceduralStatement (stmtSTOPRUN STOP RUN))))

SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_NEXT_SENTENCE.source=SEARCH X-1 VARYING I WHEN CONDITION-2 NEXT SENTENCE
SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_NEXT_SENTENCE.tree=(proceduralStatement (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) NEXT SENTENCE))

SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN.source=SEARCH X-1 VARYING I WHEN CONDITION-2 STOP RUN WHEN X-2 IS NOT POSITIVE STOP RUN
SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN.tree=(proceduralStatement (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) (proceduralStatement (stmtSTOPRUN STOP RUN)) WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) (proceduralStatement (stmtSTOPRUN STOP RUN))))

SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE.source=SEARCH X-1 VARYING I WHEN CONDITION-2 STOP RUN WHEN X-2 IS NOT POSITIVE NEXT SENTENCE
SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE.tree=(proceduralStatement (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) (proceduralStatement (stmtSTOPRUN STOP RUN)) WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) NEXT SENTENCE))

SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN.source=SEARCH X-1 VARYING I WHEN CONDITION-2 NEXT SENTENCE WHEN X-2 IS NOT POSITIVE STOP RUN
SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN.tree=(proceduralStatement (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) NEXT SENTENCE WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) (proceduralStatement (stmtSTOPRUN STOP RUN))))

SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE.source=SEARCH X-1 VARYING I WHEN CONDITION-2 NEXT SENTENCE WHEN X-2 IS NOT POSITIVE NEXT SENTENCE
SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE.tree=(proceduralStatement (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) NEXT SENTENCE WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) NEXT SENTENCE))

SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_STOP_RUN.source=SEARCH X-1 VARYING I END STOP RUN WHEN CONDITION-2 STOP RUN
SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_STOP_RUN.tree=(proceduralStatement (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) (proceduralStatement (stmtSTOPRUN STOP RUN))))

SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_NEXT_SENTENCE.source=SEARCH X-1 VARYING I END STOP RUN WHEN CONDITION-2 NEXT SENTENCE
SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_NEXT_SENTENCE.tree=(proceduralStatement (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) NEXT SENTENCE))

SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN.source=SEARCH X-1 VARYING I END STOP RUN WHEN CONDITION-2 STOP RUN WHEN X-2 IS NOT POSITIVE STOP RUN
SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN.tree=(proceduralStatement (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) (proceduralStatement (stmtSTOPRUN STOP RUN)) WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) (proceduralStatement (stmtSTOPRUN STOP RUN))))

SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE.source=SEARCH X-1 VARYING I END STOP RUN WHEN CONDITION-2 STOP RUN WHEN X-2 IS NOT POSITIVE NEXT SENTENCE
SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE.tree=(proceduralStatement (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) (proceduralStatement (stmtSTOPRUN STOP RUN)) WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) NEXT SENTENCE))

SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN.source=SEARCH X-1 VARYING I END STOP RUN WHEN CONDITION-2 NEXT SENTENCE WHEN X-2 IS NOT POSITIVE STOP RUN
SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN.tree=(proceduralStatement (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) NEXT SENTENCE WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) (proceduralStatement (stmtSTOPRUN STOP RUN))))

SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE.source=SEARCH X-1 VARYING I END STOP RUN WHEN CONDITION-2 NEXT SENTENCE WHEN X-2 IS NOT POSITIVE NEXT SENTENCE
SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE.tree=(proceduralStatement (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) NEXT SENTENCE WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) NEXT SENTENCE))

SEARCH_ALL_X_1_WHEN_DATA_1_IS_EQUAL_ID_1_OP_PLUS_10_STOP_RUN.source=SEARCH ALL X-1 WHEN DATA-1 IS EQUAL ID-1 + 10 STOP RUN
SEARCH_ALL_X_1_WHEN_DATA_1_IS_EQUAL_ID_1_OP_PLUS_10_STOP_RUN.tree=(proceduralStatement (stmtSEARCHconditional SEARCH ALL (identifier X-1) WHEN (searchWhenPhrase (dataName DATA-1) IS EQUAL (arithmeticExpression (arithmeticExpression (identifier ID-1)) + (arithmeticExpression (literal (numericLiteral 10))))) (proceduralStatement (stmtSTOPRUN STOP RUN))))

SEARCH_ALL_X_1_WHEN_DATA_1_OP_EQUAL_ID_1_OP_PLUS_10_NEXT_SENTENCE.source=SEARCH ALL X-1 WHEN DATA-1 = ID-1 + 10 NEXT SENTENCE
SEARCH_ALL_X_1_WHEN_DATA_1_OP_EQUAL_ID_1_OP_PLUS_10_NEXT_SENTENCE.tree=(proceduralStatement (stmtSEARCHconditional SEARCH ALL (identifier X-1) WHEN (searchWhenPhrase (dataName DATA-1) = (arithmeticExpression (arithmeticExpression (identifier ID-1)) + (arithmeticExpression (literal (numericLiteral 10))))) NEXT SENTENCE))

SEARCH_ALL_X_1_WHEN_DATA_1_IS_EQUAL_TO_QUOTED_D1_AND_DATA_1_OP_EQUAL_ID_1_STOP_RUN.source=SEARCH ALL X-1 WHEN DATA-1 IS EQUAL TO 'D1' AND DATA-1 = ID-1 STOP RUN
SEARCH_ALL_X_1_WHEN_DATA_1_IS_EQUAL_TO_QUOTED_D1_AND_DATA_1_OP_EQUAL_ID_1_STOP_RUN.tree=(proceduralStatement (stmtSEARCHconditional SEARCH ALL (identifier X-1) WHEN (searchWhenPhrase (dataName DATA-1) IS EQUAL TO (literal (alphanumericLiteral 'D1'))) AND (searchWhenPhrase (dataName DATA-1) = (identifier ID-1)) (proceduralStatement (stmtSTOPRUN STOP RUN))))

SEARCH_ALL_X_1_WHEN_DATA_1_IS_OP_EQUAL_QUOTED_D1_AND_DATA_1_IS_EQUAL_ID_1_NEXT_SENTENCE.source=SEARCH ALL X-1 WHEN DATA-1 IS = 'D1' AND DATA-1 IS EQUAL ID-1 NEXT SENTENCE
SEARCH_ALL_X_1_WHEN_DATA_1_IS_OP_EQUAL_QUOTED_D1_AND_DATA_1_IS_EQUAL_ID_1_NEXT_SENTENCE.tree=(proceduralStatement (stmtSEARCHconditional SEARCH ALL (identifier X-1) WHEN (searchWhenPhrase (dataName DATA-1) IS = (literal (alphanumericLiteral 'D1'))) AND (searchWhenPhrase (dataName DATA-1) IS EQUAL (identifier ID-1)) NEXT SENTENCE))

SEARCH_ALL_X_1_WHEN_CONDITION_1_AND_DATA_1_IS_OP_EQUAL_ID_1_AND_DATA_1_IS_EQUAL_ID_1_STOP_RUN.source=SEARCH ALL X-1 WHEN CONDITION-1 AND DATA-1 IS = ID-1 AND DATA-1 IS EQUAL ID-1 STOP RUN
SEARCH_ALL_X_1_WHEN_CONDITION_1_AND_DATA_1_IS_OP_EQUAL_ID_1_AND_DATA_1_IS_EQUAL_ID_1_STOP_RUN.tree=(proceduralStatement (stmtSEARCHconditional SEARCH ALL (identifier X-1) WHEN (searchWhenPhrase (conditionalExpression (conditionalExpression (conditionalExpression (conditionNameCondition (conditionName CONDITION-1))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation =) (operand (identifier ID-1))))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation EQUAL) (operand (identifier ID-1)))))) (proceduralStatement (stmtSTOPRUN STOP RUN))))

SEARCH_ALL_X_1_WHEN_CONDITION_1_AND_DATA_1_IS_EQUAL_TO_ID_1_AND_DATA_1_OP_EQUAL_ID_1_NEXT_SENTENCE.source=SEARCH ALL X-1 WHEN CONDITION-1 AND DATA-1 IS EQUAL TO ID-1 AND DATA-1 = ID-1 NEXT SENTENCE
SEARCH_ALL_X_1_WHEN_CONDITION_1_AND_DATA_1_IS_EQUAL_TO_ID_1_AND_DATA_1_OP_EQUAL_ID_1_NEXT_SENTENCE.tree=(proceduralStatement (stmtSEARCHconditional SEARCH ALL (identifier X-1) WHEN (searchWhenPhrase (conditionalExpression (conditionalExpression (conditionalExpression (conditionNameCondition (conditionName CONDITION-1))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation EQUAL TO) (operand (identifier ID-1))))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) (relation =) (operand (identifier ID-1)))))) NEXT SENTENCE))

SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_STOP_RUN.source=SEARCH ALL X-1 END STOP RUN WHEN CONDITION-1 STOP RUN
SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_STOP_RUN.tree=(proceduralStatement (stmtSEARCHconditional SEARCH ALL (identifier X-1) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (searchWhenPhrase (conditionalExpression (conditionNameCondition (conditionName CONDITION-1)))) (proceduralStatement (stmtSTOPRUN STOP RUN))))

SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_NEXT_SENTENCE.source=SEARCH ALL X-1 END STOP RUN WHEN CONDITION-1 NEXT SENTENCE
SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_NEXT_SENTENCE.tree=(proceduralStatement (stmtSEARCHconditional SEARCH ALL (identifier X-1) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (searchWhenPhrase (conditionalExpression (conditionNameCondition (conditionName CONDITION-1)))) NEXT SENTENCE))

SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_IS_EQUAL_QUOTED_D1_STOP_RUN.source=SEARCH ALL X-1 END STOP RUN WHEN CONDITION-1 AND DATA-1 IS EQUAL 'D1' STOP RUN
SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_IS_EQUAL_QUOTED_D1_STOP_RUN.tree=(proceduralStatement (stmtSEARCHconditional SEARCH ALL (identifier X-1) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (searchWhenPhrase (conditionalExpression (conditionalExpression (conditionNameCondition (conditionName CONDITION-1))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation EQUAL) (operand (literal (alphanumericLiteral 'D1'))))))) (proceduralStatement (stmtSTOPRUN STOP RUN))))

SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_OP_EQUAL_QUOTED_D1_NEXT_SENTENCE.source=SEARCH ALL X-1 END STOP RUN WHEN CONDITION-1 AND DATA-1 = 'D1' NEXT SENTENCE
SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_OP_EQUAL_QUOTED_D1_NEXT_SENTENCE.tree=(proceduralStatement (stmtSEARCHconditional SEARCH ALL (identifier X-1) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (searchWhenPhrase (conditionalExpression (conditionalExpression (conditionNameCondition (conditionName CONDITION-1))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) (relation =) (operand (literal (alphanumericLiteral 'D1'))))))) NEXT SENTENCE))

SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_IS_EQUAL_TO_ID_1_AND_DATA_1_OP_EQUAL_ID_1_STOP_RUN.source=SEARCH ALL X-1 END STOP RUN WHEN CONDITION-1 AND DATA-1 IS EQUAL TO ID-1 AND DATA-1 = ID-1 STOP RUN
SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_IS_EQUAL_TO_ID_1_AND_DATA_1_OP_EQUAL_ID_1_STOP_RUN.tree=(proceduralStatement (stmtSEARCHconditional SEARCH ALL (identifier X-1) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (searchWhenPhrase (conditionalExpression (conditionalExpression (conditionalExpression (conditionNameCondition (conditionName CONDITION-1))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation EQUAL TO) (operand (identifier ID-1))))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) (relation =) (operand (identifier ID-1)))))) (proceduralStatement (stmtSTOPRUN STOP RUN))))

SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_IS_OP_EQUAL_ID_1_AND_DATA_1_IS_EQUAL_ID_1_NEXT_SENTENCE.source=SEARCH ALL X-1 END STOP RUN WHEN CONDITION-1 AND DATA-1 IS = ID-1 AND DATA-1 IS EQUAL ID-1 NEXT SENTENCE
SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_IS_OP_EQUAL_ID_1_AND_DATA_1_IS_EQUAL_ID_1_NEXT_SENTENCE.tree=(proceduralStatement (stmtSEARCHconditional SEARCH ALL (identifier X-1) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (searchWhenPhrase (conditionalExpression (conditionalExpression (conditionalExpression (conditionNameCondition (conditionName CONDITION-1))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation =) (operand (identifier ID-1))))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation EQUAL) (operand (identifier ID-1)))))) NEXT SENTENCE))


SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_STOP_RUN_END_SEARCH.source=SEARCH X-1 VARYING I WHEN CONDITION-2 STOP RUN END-SEARCH
SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_STOP_RUN_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) (proceduralStatement (stmtSTOPRUN STOP RUN))) END-SEARCH))

SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_NEXT_SENTENCE_END_SEARCH.source=SEARCH X-1 VARYING I WHEN CONDITION-2 NEXT SENTENCE END-SEARCH
SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_NEXT_SENTENCE_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) NEXT SENTENCE) END-SEARCH))

SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN_END_SEARCH.source=SEARCH X-1 VARYING I WHEN CONDITION-2 STOP RUN WHEN X-2 IS NOT POSITIVE STOP RUN END-SEARCH
SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) (proceduralStatement (stmtSTOPRUN STOP RUN)) WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) (proceduralStatement (stmtSTOPRUN STOP RUN))) END-SEARCH))

SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE_END_SEARCH.source=SEARCH X-1 VARYING I WHEN CONDITION-2 STOP RUN WHEN X-2 IS NOT POSITIVE NEXT SENTENCE END-SEARCH
SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) (proceduralStatement (stmtSTOPRUN STOP RUN)) WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) NEXT SENTENCE) END-SEARCH))

SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN_END_SEARCH.source=SEARCH X-1 VARYING I WHEN CONDITION-2 NEXT SENTENCE WHEN X-2 IS NOT POSITIVE STOP RUN END-SEARCH
SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) NEXT SENTENCE WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) (proceduralStatement (stmtSTOPRUN STOP RUN))) END-SEARCH))

SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE_END_SEARCH.source=SEARCH X-1 VARYING I WHEN CONDITION-2 NEXT SENTENCE WHEN X-2 IS NOT POSITIVE NEXT SENTENCE END-SEARCH
SEARCH_X_1_VARYING_I_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) NEXT SENTENCE WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) NEXT SENTENCE) END-SEARCH))

SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_STOP_RUN_END_SEARCH.source=SEARCH X-1 VARYING I END STOP RUN WHEN CONDITION-2 STOP RUN END-SEARCH
SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_STOP_RUN_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) (proceduralStatement (stmtSTOPRUN STOP RUN))) END-SEARCH))

SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_NEXT_SENTENCE_END_SEARCH.source=SEARCH X-1 VARYING I END STOP RUN WHEN CONDITION-2 NEXT SENTENCE END-SEARCH
SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_NEXT_SENTENCE_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) NEXT SENTENCE) END-SEARCH))

SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN_END_SEARCH.source=SEARCH X-1 VARYING I END STOP RUN WHEN CONDITION-2 STOP RUN WHEN X-2 IS NOT POSITIVE STOP RUN END-SEARCH
SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) (proceduralStatement (stmtSTOPRUN STOP RUN)) WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) (proceduralStatement (stmtSTOPRUN STOP RUN))) END-SEARCH))

SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE_END_SEARCH.source=SEARCH X-1 VARYING I END STOP RUN WHEN CONDITION-2 STOP RUN WHEN X-2 IS NOT POSITIVE NEXT SENTENCE END-SEARCH
SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_STOP_RUN_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) (proceduralStatement (stmtSTOPRUN STOP RUN)) WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) NEXT SENTENCE) END-SEARCH))

SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN_END_SEARCH.source=SEARCH X-1 VARYING I END STOP RUN WHEN CONDITION-2 NEXT SENTENCE WHEN X-2 IS NOT POSITIVE STOP RUN END-SEARCH
SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_STOP_RUN_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) NEXT SENTENCE WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) (proceduralStatement (stmtSTOPRUN STOP RUN))) END-SEARCH))

SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE_END_SEARCH.source=SEARCH X-1 VARYING I END STOP RUN WHEN CONDITION-2 NEXT SENTENCE WHEN X-2 IS NOT POSITIVE NEXT SENTENCE END-SEARCH
SEARCH_X_1_VARYING_I_END_STOP_RUN_WHEN_CONDITION_2_NEXT_SENTENCE_WHEN_X_2_IS_NOT_POSITIVE_NEXT_SENTENCE_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH (identifier X-1) VARYING (identifier I) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (conditionalExpression (conditionNameCondition (conditionName CONDITION-2))) NEXT SENTENCE WHEN (conditionalExpression (signCondition (operand (identifier X-2)) IS NOT POSITIVE)) NEXT SENTENCE) END-SEARCH))

SEARCH_ALL_X_1_WHEN_DATA_1_IS_EQUAL_ID_1_OP_PLUS_10_STOP_RUN_END_SEARCH.source=SEARCH ALL X-1 WHEN DATA-1 IS EQUAL ID-1 + 10 STOP RUN END-SEARCH
SEARCH_ALL_X_1_WHEN_DATA_1_IS_EQUAL_ID_1_OP_PLUS_10_STOP_RUN_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH ALL (identifier X-1) WHEN (searchWhenPhrase (dataName DATA-1) IS EQUAL (arithmeticExpression (arithmeticExpression (identifier ID-1)) + (arithmeticExpression (literal (numericLiteral 10))))) (proceduralStatement (stmtSTOPRUN STOP RUN))) END-SEARCH))

SEARCH_ALL_X_1_WHEN_DATA_1_OP_EQUAL_ID_1_OP_PLUS_10_NEXT_SENTENCE_END_SEARCH.source=SEARCH ALL X-1 WHEN DATA-1 = ID-1 + 10 NEXT SENTENCE END-SEARCH
SEARCH_ALL_X_1_WHEN_DATA_1_OP_EQUAL_ID_1_OP_PLUS_10_NEXT_SENTENCE_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH ALL (identifier X-1) WHEN (searchWhenPhrase (dataName DATA-1) = (arithmeticExpression (arithmeticExpression (identifier ID-1)) + (arithmeticExpression (literal (numericLiteral 10))))) NEXT SENTENCE) END-SEARCH))

SEARCH_ALL_X_1_WHEN_DATA_1_IS_EQUAL_TO_QUOTED_D1_AND_DATA_1_OP_EQUAL_ID_1_STOP_RUN_END_SEARCH.source=SEARCH ALL X-1 WHEN DATA-1 IS EQUAL TO 'D1' AND DATA-1 = ID-1 STOP RUN END-SEARCH
SEARCH_ALL_X_1_WHEN_DATA_1_IS_EQUAL_TO_QUOTED_D1_AND_DATA_1_OP_EQUAL_ID_1_STOP_RUN_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH ALL (identifier X-1) WHEN (searchWhenPhrase (dataName DATA-1) IS EQUAL TO (literal (alphanumericLiteral 'D1'))) AND (searchWhenPhrase (dataName DATA-1) = (identifier ID-1)) (proceduralStatement (stmtSTOPRUN STOP RUN))) END-SEARCH))

SEARCH_ALL_X_1_WHEN_DATA_1_IS_OP_EQUAL_QUOTED_D1_AND_DATA_1_IS_EQUAL_ID_1_NEXT_SENTENCE_END_SEARCH.source=SEARCH ALL X-1 WHEN DATA-1 IS = 'D1' AND DATA-1 IS EQUAL ID-1 NEXT SENTENCE END-SEARCH
SEARCH_ALL_X_1_WHEN_DATA_1_IS_OP_EQUAL_QUOTED_D1_AND_DATA_1_IS_EQUAL_ID_1_NEXT_SENTENCE_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH ALL (identifier X-1) WHEN (searchWhenPhrase (dataName DATA-1) IS = (literal (alphanumericLiteral 'D1'))) AND (searchWhenPhrase (dataName DATA-1) IS EQUAL (identifier ID-1)) NEXT SENTENCE) END-SEARCH))

SEARCH_ALL_X_1_WHEN_CONDITION_1_AND_DATA_1_IS_OP_EQUAL_ID_1_AND_DATA_1_IS_EQUAL_ID_1_STOP_RUN_END_SEARCH.source=SEARCH ALL X-1 WHEN CONDITION-1 AND DATA-1 IS = ID-1 AND DATA-1 IS EQUAL ID-1 STOP RUN END-SEARCH
SEARCH_ALL_X_1_WHEN_CONDITION_1_AND_DATA_1_IS_OP_EQUAL_ID_1_AND_DATA_1_IS_EQUAL_ID_1_STOP_RUN_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH ALL (identifier X-1) WHEN (searchWhenPhrase (conditionalExpression (conditionalExpression (conditionalExpression (conditionNameCondition (conditionName CONDITION-1))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation =) (operand (identifier ID-1))))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation EQUAL) (operand (identifier ID-1)))))) (proceduralStatement (stmtSTOPRUN STOP RUN))) END-SEARCH))

SEARCH_ALL_X_1_WHEN_CONDITION_1_AND_DATA_1_IS_EQUAL_TO_ID_1_AND_DATA_1_OP_EQUAL_ID_1_NEXT_SENTENCE_END_SEARCH.source=SEARCH ALL X-1 WHEN CONDITION-1 AND DATA-1 IS EQUAL TO ID-1 AND DATA-1 = ID-1 NEXT SENTENCE END-SEARCH
SEARCH_ALL_X_1_WHEN_CONDITION_1_AND_DATA_1_IS_EQUAL_TO_ID_1_AND_DATA_1_OP_EQUAL_ID_1_NEXT_SENTENCE_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH ALL (identifier X-1) WHEN (searchWhenPhrase (conditionalExpression (conditionalExpression (conditionalExpression (conditionNameCondition (conditionName CONDITION-1))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation EQUAL TO) (operand (identifier ID-1))))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) (relation =) (operand (identifier ID-1)))))) NEXT SENTENCE) END-SEARCH))

SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_STOP_RUN_END_SEARCH.source=SEARCH ALL X-1 END STOP RUN WHEN CONDITION-1 STOP RUN END-SEARCH
SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_STOP_RUN_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH ALL (identifier X-1) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (searchWhenPhrase (conditionalExpression (conditionNameCondition (conditionName CONDITION-1)))) (proceduralStatement (stmtSTOPRUN STOP RUN))) END-SEARCH))

SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_NEXT_SENTENCE_END_SEARCH.source=SEARCH ALL X-1 END STOP RUN WHEN CONDITION-1 NEXT SENTENCE END-SEARCH
SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_NEXT_SENTENCE_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH ALL (identifier X-1) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (searchWhenPhrase (conditionalExpression (conditionNameCondition (conditionName CONDITION-1)))) NEXT SENTENCE) END-SEARCH))

SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_IS_EQUAL_QUOTED_D1_STOP_RUN_END_SEARCH.source=SEARCH ALL X-1 END STOP RUN WHEN CONDITION-1 AND DATA-1 IS EQUAL 'D1' STOP RUN END-SEARCH
SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_IS_EQUAL_QUOTED_D1_STOP_RUN_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH ALL (identifier X-1) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (searchWhenPhrase (conditionalExpression (conditionalExpression (conditionNameCondition (conditionName CONDITION-1))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation EQUAL) (operand (literal (alphanumericLiteral 'D1'))))))) (proceduralStatement (stmtSTOPRUN STOP RUN))) END-SEARCH))

SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_OP_EQUAL_QUOTED_D1_NEXT_SENTENCE_END_SEARCH.source=SEARCH ALL X-1 END STOP RUN WHEN CONDITION-1 AND DATA-1 = 'D1' NEXT SENTENCE END-SEARCH
SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_OP_EQUAL_QUOTED_D1_NEXT_SENTENCE_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH ALL (identifier X-1) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (searchWhenPhrase (conditionalExpression (conditionalExpression (conditionNameCondition (conditionName CONDITION-1))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) (relation =) (operand (literal (alphanumericLiteral 'D1'))))))) NEXT SENTENCE) END-SEARCH))

SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_IS_EQUAL_TO_ID_1_AND_DATA_1_OP_EQUAL_ID_1_STOP_RUN_END_SEARCH.source=SEARCH ALL X-1 END STOP RUN WHEN CONDITION-1 AND DATA-1 IS EQUAL TO ID-1 AND DATA-1 = ID-1 STOP RUN END-SEARCH
SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_IS_EQUAL_TO_ID_1_AND_DATA_1_OP_EQUAL_ID_1_STOP_RUN_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH ALL (identifier X-1) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (searchWhenPhrase (conditionalExpression (conditionalExpression (conditionalExpression (conditionNameCondition (conditionName CONDITION-1))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation EQUAL TO) (operand (identifier ID-1))))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) (relation =) (operand (identifier ID-1)))))) (proceduralStatement (stmtSTOPRUN STOP RUN))) END-SEARCH))

SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_IS_OP_EQUAL_ID_1_AND_DATA_1_IS_EQUAL_ID_1_NEXT_SENTENCE_END_SEARCH.source=SEARCH ALL X-1 END STOP RUN WHEN CONDITION-1 AND DATA-1 IS = ID-1 AND DATA-1 IS EQUAL ID-1 NEXT SENTENCE END-SEARCH
SEARCH_ALL_X_1_END_STOP_RUN_WHEN_CONDITION_1_AND_DATA_1_IS_OP_EQUAL_ID_1_AND_DATA_1_IS_EQUAL_ID_1_NEXT_SENTENCE_END_SEARCH.tree=(proceduralStatement (stmtSEARCHdelimitedScope (stmtSEARCHconditional SEARCH ALL (identifier X-1) (atEndPhrase END (proceduralStatement (stmtSTOPRUN STOP RUN))) WHEN (searchWhenPhrase (conditionalExpression (conditionalExpression (conditionalExpression (conditionNameCondition (conditionName CONDITION-1))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation =) (operand (identifier ID-1))))) AND (conditionalExpression (relationCondition (operand (identifier DATA-1)) IS (relation EQUAL) (operand (identifier ID-1)))))) NEXT SENTENCE) END-SEARCH))


