# BEGIN COPYRIGHT NOTICE
# 
# This file is part of program "cobolg"
# Copyright 2016  Rodrigo Lemos
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# END COPYRIGHT NOTICE

XML_GENERATE_XML_1_FROM_SOURCE_0.source=XML GENERATE XML-1 FROM SOURCE-0
XML_GENERATE_XML_1_FROM_SOURCE_0.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0))))

XML_GENERATE_XML_1_FROM_SOURCE_0_COUNT_IN_C.source=XML GENERATE XML-1 FROM SOURCE-0 COUNT IN C
XML_GENERATE_XML_1_FROM_SOURCE_0_COUNT_IN_C.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) COUNT IN (identifier C))))

XML_GENERATE_XML_1_FROM_SOURCE_0_WITH_ENCODING_1200.source=XML GENERATE XML-1 FROM SOURCE-0 WITH ENCODING 1200
XML_GENERATE_XML_1_FROM_SOURCE_0_WITH_ENCODING_1200.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) WITH ENCODING (literal (numericLiteral 1200)))))

XML_GENERATE_XML_1_FROM_SOURCE_0_WITH_XML_DECLARATION.source=XML GENERATE XML-1 FROM SOURCE-0 WITH XML-DECLARATION
XML_GENERATE_XML_1_FROM_SOURCE_0_WITH_XML_DECLARATION.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) WITH XML-DECLARATION)))

XML_GENERATE_XML_1_FROM_SOURCE_0_WITH_ATTRIBUTES.source=XML GENERATE XML-1 FROM SOURCE-0 WITH ATTRIBUTES
XML_GENERATE_XML_1_FROM_SOURCE_0_WITH_ATTRIBUTES.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) WITH ATTRIBUTES)))

XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_NS_NAME.source=XML GENERATE XML-1 FROM SOURCE-0 NAMESPACE IS NS-NAME
XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_NS_NAME.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) NAMESPACE IS (identifier NS-NAME))))

XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_URL.source=XML GENERATE XML-1 FROM SOURCE-0 NAMESPACE IS 'HTTP://X'
XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_URL.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) NAMESPACE IS (literal (alphanumericLiteral 'HTTP://X')))))

XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_NS_NAME_NAMESPACE_PREFIX_IS_NS_PREFIX.source=XML GENERATE XML-1 FROM SOURCE-0 NAMESPACE IS NS-NAME NAMESPACE-PREFIX IS NS-PREFIX
XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_NS_NAME_NAMESPACE_PREFIX_IS_NS_PREFIX.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) NAMESPACE IS (identifier NS-NAME) NAMESPACE-PREFIX IS (identifier NS-PREFIX))))

XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_NS_NAME_NAMESPACE_PREFIX_IS_QUOTED_PREFIX.source=XML GENERATE XML-1 FROM SOURCE-0 NAMESPACE IS NS-NAME NAMESPACE-PREFIX IS 'PREFIX'
XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_NS_NAME_NAMESPACE_PREFIX_IS_QUOTED_PREFIX.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) NAMESPACE IS (identifier NS-NAME) NAMESPACE-PREFIX IS (literal (alphanumericLiteral 'PREFIX')))))

XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_URL_NAMESPACE_PREFIX_IS_NS_PREFIX.source=XML GENERATE XML-1 FROM SOURCE-0 NAMESPACE IS 'HTTP://X' NAMESPACE-PREFIX IS NS-PREFIX
XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_URL_NAMESPACE_PREFIX_IS_NS_PREFIX.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) NAMESPACE IS (literal (alphanumericLiteral 'HTTP://X')) NAMESPACE-PREFIX IS (identifier NS-PREFIX))))

XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_URL_NAMESPACE_PREFIX_IS_QUOTED_PREFIX.source=XML GENERATE XML-1 FROM SOURCE-0 NAMESPACE IS 'HTTP://X' NAMESPACE-PREFIX IS 'PREFIX' 
XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_URL_NAMESPACE_PREFIX_IS_QUOTED_PREFIX.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) NAMESPACE IS (literal (alphanumericLiteral 'HTTP://X')) NAMESPACE-PREFIX IS (literal (alphanumericLiteral 'PREFIX')))))

XML_GENERATE_XML_1_FROM_SOURCE_0_NAME_OF_ID_1_IS_QUOTED_ID1.source=XML GENERATE XML-1 FROM SOURCE-0 NAME OF ID-1 IS 'ID1'
XML_GENERATE_XML_1_FROM_SOURCE_0_NAME_OF_ID_1_IS_QUOTED_ID1.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) NAME OF (identifier ID-1) IS (literal (alphanumericLiteral 'ID1')))))

XML_GENERATE_XML_1_FROM_SOURCE_0_NAME_OF_ID_1_IS_QUOTED_ID1_ID_2_IS_QUOTED_ID_2.source=XML GENERATE XML-1 FROM SOURCE-0 NAME OF ID-1 IS 'ID1' ID-2 IS 'ID-2'
XML_GENERATE_XML_1_FROM_SOURCE_0_NAME_OF_ID_1_IS_QUOTED_ID1_ID_2_IS_QUOTED_ID_2.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) NAME OF (identifier ID-1) IS (literal (alphanumericLiteral 'ID1')) (identifier ID-2) IS (literal (alphanumericLiteral 'ID-2')))))

XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_ATTRIBUTE.source=XML GENERATE XML-1 FROM SOURCE-0 TYPE OF VAL-1 IS ATTRIBUTE
XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_ATTRIBUTE.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) TYPE OF (identifier VAL-1) IS ATTRIBUTE)))

XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_ELEMENT.source=XML GENERATE XML-1 FROM SOURCE-0 TYPE OF VAL-1 IS ELEMENT
XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_ELEMENT.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) TYPE OF (identifier VAL-1) IS ELEMENT)))

XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_CONTENT.source=XML GENERATE XML-1 FROM SOURCE-0 TYPE OF VAL-1 IS CONTENT
XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_CONTENT.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) TYPE OF (identifier VAL-1) IS CONTENT)))

XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_ATTRIBUTE_VAL_2_IS_CONTENT.source=XML GENERATE XML-1 FROM SOURCE-0 TYPE OF VAL-1 IS ATTRIBUTE VAL-2 IS CONTENT
XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_ATTRIBUTE_VAL_2_IS_CONTENT.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) TYPE OF (identifier VAL-1) IS ATTRIBUTE (identifier VAL-2) IS CONTENT)))

XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_ELEMENT_VAL_2_IS_ATTRIBUTE.source=XML GENERATE XML-1 FROM SOURCE-0 TYPE OF VAL-1 IS ELEMENT VAL-2 IS ATTRIBUTE
XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_ELEMENT_VAL_2_IS_ATTRIBUTE.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) TYPE OF (identifier VAL-1) IS ELEMENT (identifier VAL-2) IS ATTRIBUTE)))

XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_CONTENT_VAL_2_IS_ELEMENT.source=XML GENERATE XML-1 FROM SOURCE-0 TYPE OF VAL-1 IS CONTENT VAL-2 IS ELEMENT
XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_CONTENT_VAL_2_IS_ELEMENT.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) TYPE OF (identifier VAL-1) IS CONTENT (identifier VAL-2) IS ELEMENT)))

XML_GENERATE_XML_1_FROM_SOURCE_0_SUPPRESS_X_1.source=XML GENERATE XML-1 FROM SOURCE-0 SUPPRESS X-1
XML_GENERATE_XML_1_FROM_SOURCE_0_SUPPRESS_X_1.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) SUPPRESS (identifier X-1))))

XML_GENERATE_XML_1_FROM_SOURCE_0_SUPPRESS_X_1_WHEN_ZEROS_OR_SPACES_OR_LOW_VALUES.source=XML GENERATE XML-1 FROM SOURCE-0 SUPPRESS X-1 WHEN ZEROS OR SPACES OR LOW-VALUES
XML_GENERATE_XML_1_FROM_SOURCE_0_SUPPRESS_X_1_WHEN_ZEROS_OR_SPACES_OR_LOW_VALUES.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) SUPPRESS (identifier X-1) (xmlGenerateWhenPhrase WHEN ZEROS OR SPACES OR LOW-VALUES))))

XML_GENERATE_XML_1_FROM_SOURCE_0_SUPPRESS_EVERY_NUMERIC_ATTRIBUTE_WHEN_ZEROS_OR_LOW_VALUES_OR_HIGH_VALUES.source=XML GENERATE XML-1 FROM SOURCE-0 SUPPRESS EVERY NUMERIC ATTRIBUTE WHEN ZEROS OR LOW-VALUES OR HIGH-VALUES
XML_GENERATE_XML_1_FROM_SOURCE_0_SUPPRESS_EVERY_NUMERIC_ATTRIBUTE_WHEN_ZEROS_OR_LOW_VALUES_OR_HIGH_VALUES.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) SUPPRESS (genericSupressionPhrase EVERY NUMERIC ATTRIBUTE (xmlGenerateWhenPhrase WHEN ZEROS OR LOW-VALUES OR HIGH-VALUES)))))

XML_GENERATE_XML_1_FROM_SOURCE_0_SUPPRESS_X_1_X_2_WHEN_ZERO_SPACE_LOW_VALUE.source=XML GENERATE XML-1 FROM SOURCE-0 SUPPRESS X-1 X-2 WHEN ZERO SPACE LOW-VALUE
XML_GENERATE_XML_1_FROM_SOURCE_0_SUPPRESS_X_1_X_2_WHEN_ZERO_SPACE_LOW_VALUE.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) SUPPRESS (identifier X-1) (identifier X-2) (xmlGenerateWhenPhrase WHEN ZERO SPACE LOW-VALUE))))

XML_GENERATE_XML_1_FROM_SOURCE_0_SUPPRESS_X_1_WHEN_HIGH_VALUES_EVERY_NONNUMERIC_WHEN_SPACES.source=XML GENERATE XML-1 FROM SOURCE-0 SUPPRESS X-1 WHEN HIGH-VALUES EVERY NONNUMERIC WHEN SPACES
XML_GENERATE_XML_1_FROM_SOURCE_0_SUPPRESS_X_1_WHEN_HIGH_VALUES_EVERY_NONNUMERIC_WHEN_SPACES.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) SUPPRESS (identifier X-1) (xmlGenerateWhenPhrase WHEN HIGH-VALUES) (genericSupressionPhrase EVERY NONNUMERIC (xmlGenerateWhenPhrase WHEN SPACES)))))

XML_GENERATE_XML_1_FROM_SOURCE_0_SUPPRESS_EVERY_CONTENT_WHEN_ZERO_SPACE_X_2.source=XML GENERATE XML-1 FROM SOURCE-0 SUPPRESS EVERY CONTENT WHEN ZERO SPACE X-2
XML_GENERATE_XML_1_FROM_SOURCE_0_SUPPRESS_EVERY_CONTENT_WHEN_ZERO_SPACE_X_2.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) SUPPRESS (genericSupressionPhrase EVERY CONTENT (xmlGenerateWhenPhrase WHEN ZERO SPACE)) (identifier X-2))))

XML_GENERATE_XML_1_FROM_SOURCE_0_COUNT_IN_C_WITH_ENCODING_1208.source=XML GENERATE XML-1 FROM SOURCE-0 COUNT IN C WITH ENCODING 1208
XML_GENERATE_XML_1_FROM_SOURCE_0_COUNT_IN_C_WITH_ENCODING_1208.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) COUNT IN (identifier C) WITH ENCODING (literal (numericLiteral 1208)))))

XML_GENERATE_XML_1_FROM_SOURCE_0_WITH_ENCODING_CDPG_WITH_XML_DECLARATION.source=XML GENERATE XML-1 FROM SOURCE-0 WITH ENCODING CDPG WITH XML-DECLARATION
XML_GENERATE_XML_1_FROM_SOURCE_0_WITH_ENCODING_CDPG_WITH_XML_DECLARATION.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) WITH ENCODING (identifier CDPG) WITH XML-DECLARATION)))

XML_GENERATE_XML_1_FROM_SOURCE_0_WITH_XML_DECLARATION_WITH_ATTRIBUTES.source=XML GENERATE XML-1 FROM SOURCE-0 WITH XML-DECLARATION WITH ATTRIBUTES
XML_GENERATE_XML_1_FROM_SOURCE_0_WITH_XML_DECLARATION_WITH_ATTRIBUTES.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) WITH XML-DECLARATION WITH ATTRIBUTES)))

XML_GENERATE_XML_1_FROM_SOURCE_0_WITH_ATTRIBUTES_NAMESPACE_IS_NS_NAME_NAMESPACE_PREFIX_IS_NS_PREFIX.source=XML GENERATE XML-1 FROM SOURCE-0 WITH ATTRIBUTES NAMESPACE IS NS-NAME NAMESPACE-PREFIX IS NS-PREFIX
XML_GENERATE_XML_1_FROM_SOURCE_0_WITH_ATTRIBUTES_NAMESPACE_IS_NS_NAME_NAMESPACE_PREFIX_IS_NS_PREFIX.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) WITH ATTRIBUTES NAMESPACE IS (identifier NS-NAME) NAMESPACE-PREFIX IS (identifier NS-PREFIX))))

XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_URL_NAMESPACE_PREFIX_IS_QUOTED_PREFIX_NAME_OF_ID_1_IS_QUOTED_ID1.source=XML GENERATE XML-1 FROM SOURCE-0 NAMESPACE IS 'HTTP://X' NAMESPACE-PREFIX IS 'PREFIX' NAME OF ID-1 IS 'ID1'
XML_GENERATE_XML_1_FROM_SOURCE_0_NAMESPACE_IS_URL_NAMESPACE_PREFIX_IS_QUOTED_PREFIX_NAME_OF_ID_1_IS_QUOTED_ID1.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) NAMESPACE IS (literal (alphanumericLiteral 'HTTP://X')) NAMESPACE-PREFIX IS (literal (alphanumericLiteral 'PREFIX')) NAME OF (identifier ID-1) IS (literal (alphanumericLiteral 'ID1')))))

XML_GENERATE_XML_1_FROM_SOURCE_0_NAME_OF_ID_1_IS_QUOTED_ID1_ID_2_IS_QUOTED_ID_2_TYPE_OF_VAL_1_IS_ELEMENT_VAL_2_IS_CONTENT.source=XML GENERATE XML-1 FROM SOURCE-0 NAME OF ID-1 IS 'ID1' ID-2 IS 'ID-2' TYPE OF VAL-1 IS ELEMENT VAL-2 IS CONTENT
XML_GENERATE_XML_1_FROM_SOURCE_0_NAME_OF_ID_1_IS_QUOTED_ID1_ID_2_IS_QUOTED_ID_2_TYPE_OF_VAL_1_IS_ELEMENT_VAL_2_IS_CONTENT.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) NAME OF (identifier ID-1) IS (literal (alphanumericLiteral 'ID1')) (identifier ID-2) IS (literal (alphanumericLiteral 'ID-2')) TYPE OF (identifier VAL-1) IS ELEMENT (identifier VAL-2) IS CONTENT)))

XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_CONTENT_VAL_2_IS_ATTRIBUTE_SUPPRESS_WHEN_HIGH_VALUE_X_2_WHEN_LOW_VALUE.source=XML GENERATE XML-1 FROM SOURCE-0 TYPE OF VAL-1 IS CONTENT VAL-2 IS ATTRIBUTE SUPPRESS WHEN HIGH-VALUE X-2 WHEN LOW-VALUE
XML_GENERATE_XML_1_FROM_SOURCE_0_TYPE_OF_VAL_1_IS_CONTENT_VAL_2_IS_ATTRIBUTE_SUPPRESS_WHEN_HIGH_VALUE_X_2_WHEN_LOW_VALUE.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) TYPE OF (identifier VAL-1) IS CONTENT (identifier VAL-2) IS ATTRIBUTE SUPPRESS (genericSupressionPhrase (xmlGenerateWhenPhrase WHEN HIGH-VALUE)) (identifier X-2) (xmlGenerateWhenPhrase WHEN LOW-VALUE))))

XML_GENERATE_XML_1_FROM_SOURCE_0_COUNT_C_ENCODING_CDPG_XML_DECLARATION_ATTRIBUTES_NAMESPACE_NS_NAME_NAMESPACE_PREFIX_QUOTED_PREFIX_NAME_ID_1_QUOTED_ID1_ID_2_QUOTED_ID_2_TYPE_VAL_1_ATTRIBUTE_VAL_2_ELEMENT_SUPPRESS_X_1_WHEN_ZEROES_X_2_WHEN_HIGH_VALUE.source=XML GENERATE XML-1 FROM SOURCE-0 COUNT C ENCODING CDPG XML-DECLARATION ATTRIBUTES NAMESPACE NS-NAME NAMESPACE-PREFIX 'PREFIX' NAME ID-1 'ID1' ID-2 'ID-2' TYPE VAL-1 ATTRIBUTE VAL-2 ELEMENT SUPPRESS X-1 WHEN ZEROES X-2 WHEN HIGH-VALUE
XML_GENERATE_XML_1_FROM_SOURCE_0_COUNT_C_ENCODING_CDPG_XML_DECLARATION_ATTRIBUTES_NAMESPACE_NS_NAME_NAMESPACE_PREFIX_QUOTED_PREFIX_NAME_ID_1_QUOTED_ID1_ID_2_QUOTED_ID_2_TYPE_VAL_1_ATTRIBUTE_VAL_2_ELEMENT_SUPPRESS_X_1_WHEN_ZEROES_X_2_WHEN_HIGH_VALUE.tree=(proceduralStatement (imperativeStatement (stmtXMLGENERATEimperative XML GENERATE (identifier XML-1) FROM (identifier SOURCE-0) COUNT (identifier C) ENCODING (identifier CDPG) XML-DECLARATION ATTRIBUTES NAMESPACE (identifier NS-NAME) NAMESPACE-PREFIX (literal (alphanumericLiteral 'PREFIX')) NAME (identifier ID-1) (literal (alphanumericLiteral 'ID1')) (identifier ID-2) (literal (alphanumericLiteral 'ID-2')) TYPE (identifier VAL-1) ATTRIBUTE (identifier VAL-2) ELEMENT SUPPRESS (identifier X-1) (xmlGenerateWhenPhrase WHEN ZEROES) (identifier X-2) (xmlGenerateWhenPhrase WHEN HIGH-VALUE))))
