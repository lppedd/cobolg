# BEGIN COPYRIGHT NOTICE
# 
# This file is part of program "cobolg"
# Copyright 2016  Rodrigo Lemos
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# END COPYRIGHT NOTICE

XML_PARSE_XML_1_PROCESSING_PROCEDURE_IS_SAX_0.source=XML PARSE XML-1 PROCESSING PROCEDURE IS SAX-0
XML_PARSE_XML_1_PROCESSING_PROCEDURE_IS_SAX_0.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)))))

XML_PARSE_XML_1_WITH_ENCODING_CDPG_PROCESSING_PROCEDURE_SAX_0.source=XML PARSE XML-1 WITH ENCODING CDPG PROCESSING PROCEDURE SAX-0
XML_PARSE_XML_1_WITH_ENCODING_CDPG_PROCESSING_PROCEDURE_SAX_0.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (identifier CDPG) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)))))

XML_PARSE_XML_1_ENCODING_1200_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1.source=XML PARSE XML-1 ENCODING 1200 PROCESSING PROCEDURE IS SAX-0 THROUGH SAX-1
XML_PARSE_XML_1_ENCODING_1200_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (literal (numericLiteral 1200)) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1)))))

XML_PARSE_XML_1_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1.source=XML PARSE XML-1 RETURNING NATIONAL PROCESSING PROCEDURE SAX-0 THROUGH SAX-1
XML_PARSE_XML_1_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) RETURNING NATIONAL PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1)))))

XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1.source=XML PARSE XML-1 ENCODING CDPG RETURNING NATIONAL PROCESSING PROCEDURE IS SAX-0 THRU SAX-1
XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (identifier CDPG) RETURNING NATIONAL PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1)))))

XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1.source=XML PARSE XML-1 WITH ENCODING 1200 RETURNING NATIONAL PROCESSING PROCEDURE SAX-0 THRU SAX-1
XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (literal (numericLiteral 1200)) RETURNING NATIONAL PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1)))))

XML_PARSE_XML_1_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1.source=XML PARSE XML-1 VALIDATING WITH VLDTR-1 PROCESSING PROCEDURE IS SAX-0 THROUGH SAX-1
XML_PARSE_XML_1_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) VALIDATING WITH (identifier VLDTR-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1)))))

XML_PARSE_XML_1_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1.source=XML PARSE XML-1 VALIDATING FILE SCHEMA-1 PROCESSING PROCEDURE SAX-0 THROUGH SAX-1
XML_PARSE_XML_1_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) VALIDATING FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1)))))

XML_PARSE_XML_1_WITH_ENCODING_CDPG_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0.source=XML PARSE XML-1 WITH ENCODING CDPG VALIDATING VLDTR-1 PROCESSING PROCEDURE IS SAX-0
XML_PARSE_XML_1_WITH_ENCODING_CDPG_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (identifier CDPG) VALIDATING (identifier VLDTR-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)))))

XML_PARSE_XML_1_ENCODING_CDPG_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0.source=XML PARSE XML-1 ENCODING CDPG VALIDATING WITH FILE SCHEMA-1 PROCESSING PROCEDURE SAX-0
XML_PARSE_XML_1_ENCODING_CDPG_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (identifier CDPG) VALIDATING WITH FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)))))

XML_PARSE_XML_1_ENCODING_1200_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1.source=XML PARSE XML-1 ENCODING 1200 VALIDATING WITH VLDTR-1 PROCESSING PROCEDURE IS SAX-0 THRU SAX-1
XML_PARSE_XML_1_ENCODING_1200_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (literal (numericLiteral 1200)) VALIDATING WITH (identifier VLDTR-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1)))))

XML_PARSE_XML_1_WITH_ENCODING_1200_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1.source=XML PARSE XML-1 WITH ENCODING 1200 VALIDATING FILE SCHEMA-1 PROCESSING PROCEDURE SAX-0 THRU SAX-1
XML_PARSE_XML_1_WITH_ENCODING_1200_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (literal (numericLiteral 1200)) VALIDATING FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1)))))

XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1.source=XML PARSE XML-1 RETURNING NATIONAL VALIDATING VLDTR-1 PROCESSING PROCEDURE SAX-0 THRU SAX-1
XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) RETURNING NATIONAL VALIDATING (identifier VLDTR-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1)))))

XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1.source=XML PARSE XML-1 RETURNING NATIONAL VALIDATING WITH FILE SCHEMA-1 PROCESSING PROCEDURE IS SAX-0 THRU SAX-1
XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) RETURNING NATIONAL VALIDATING WITH FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1)))))

XML_PARSE_XML_1_WITH_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1.source=XML PARSE XML-1 WITH ENCODING CDPG RETURNING NATIONAL VALIDATING WITH VLDTR-1 PROCESSING PROCEDURE SAX-0 THROUGH SAX-1
XML_PARSE_XML_1_WITH_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (identifier CDPG) RETURNING NATIONAL VALIDATING WITH (identifier VLDTR-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1)))))

XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1.source=XML PARSE XML-1 ENCODING CDPG RETURNING NATIONAL VALIDATING FILE SCHEMA-1 PROCESSING PROCEDURE IS SAX-0 THROUGH SAX-1
XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (identifier CDPG) RETURNING NATIONAL VALIDATING FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1)))))

XML_PARSE_XML_1_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0.source=XML PARSE XML-1 ENCODING 1200 RETURNING NATIONAL VALIDATING VLDTR-1 PROCESSING PROCEDURE SAX-0
XML_PARSE_XML_1_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (literal (numericLiteral 1200)) RETURNING NATIONAL VALIDATING (identifier VLDTR-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)))))

XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0.source=XML PARSE XML-1 WITH ENCODING 1200 RETURNING NATIONAL VALIDATING WITH FILE SCHEMA-1 PROCESSING PROCEDURE IS SAX-0
XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0.tree=(proceduralStatement (imperativeStatement (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (literal (numericLiteral 1200)) RETURNING NATIONAL VALIDATING WITH FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)))))


XML_PARSE_XML_1_PROCESSING_PROCEDURE_IS_SAX_0_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 PROCESSING PROCEDURE IS SAX-0 EXCEPTION STOP RUN
XML_PARSE_XML_1_PROCESSING_PROCEDURE_IS_SAX_0_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_WITH_ENCODING_CDPG_PROCESSING_PROCEDURE_SAX_0_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 WITH ENCODING CDPG PROCESSING PROCEDURE SAX-0 EXCEPTION STOP RUN
XML_PARSE_XML_1_WITH_ENCODING_CDPG_PROCESSING_PROCEDURE_SAX_0_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (identifier CDPG) PROCESSING PROCEDURE (procedureName (sectionName SAX-0))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_ENCODING_1200_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 ENCODING 1200 PROCESSING PROCEDURE IS SAX-0 THROUGH SAX-1 EXCEPTION STOP RUN
XML_PARSE_XML_1_ENCODING_1200_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (literal (numericLiteral 1200)) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 RETURNING NATIONAL PROCESSING PROCEDURE SAX-0 THROUGH SAX-1 EXCEPTION STOP RUN
XML_PARSE_XML_1_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) RETURNING NATIONAL PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 ENCODING CDPG RETURNING NATIONAL PROCESSING PROCEDURE IS SAX-0 THRU SAX-1 EXCEPTION STOP RUN
XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (identifier CDPG) RETURNING NATIONAL PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 WITH ENCODING 1200 RETURNING NATIONAL PROCESSING PROCEDURE SAX-0 THRU SAX-1 EXCEPTION STOP RUN
XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (literal (numericLiteral 1200)) RETURNING NATIONAL PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 VALIDATING WITH VLDTR-1 PROCESSING PROCEDURE IS SAX-0 THROUGH SAX-1 EXCEPTION STOP RUN
XML_PARSE_XML_1_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) VALIDATING WITH (identifier VLDTR-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 VALIDATING FILE SCHEMA-1 PROCESSING PROCEDURE SAX-0 THROUGH SAX-1 EXCEPTION STOP RUN
XML_PARSE_XML_1_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) VALIDATING FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_WITH_ENCODING_CDPG_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 WITH ENCODING CDPG VALIDATING VLDTR-1 PROCESSING PROCEDURE IS SAX-0 EXCEPTION STOP RUN
XML_PARSE_XML_1_WITH_ENCODING_CDPG_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (identifier CDPG) VALIDATING (identifier VLDTR-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_ENCODING_CDPG_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 ENCODING CDPG VALIDATING WITH FILE SCHEMA-1 PROCESSING PROCEDURE SAX-0 EXCEPTION STOP RUN
XML_PARSE_XML_1_ENCODING_CDPG_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (identifier CDPG) VALIDATING WITH FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_ENCODING_1200_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 ENCODING 1200 VALIDATING WITH VLDTR-1 PROCESSING PROCEDURE IS SAX-0 THRU SAX-1 EXCEPTION STOP RUN
XML_PARSE_XML_1_ENCODING_1200_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (literal (numericLiteral 1200)) VALIDATING WITH (identifier VLDTR-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_WITH_ENCODING_1200_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 WITH ENCODING 1200 VALIDATING FILE SCHEMA-1 PROCESSING PROCEDURE SAX-0 THRU SAX-1 EXCEPTION STOP RUN
XML_PARSE_XML_1_WITH_ENCODING_1200_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (literal (numericLiteral 1200)) VALIDATING FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 RETURNING NATIONAL VALIDATING VLDTR-1 PROCESSING PROCEDURE SAX-0 THRU SAX-1 EXCEPTION STOP RUN
XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) RETURNING NATIONAL VALIDATING (identifier VLDTR-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 RETURNING NATIONAL VALIDATING WITH FILE SCHEMA-1 PROCESSING PROCEDURE IS SAX-0 THRU SAX-1 EXCEPTION STOP RUN
XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) RETURNING NATIONAL VALIDATING WITH FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_WITH_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 WITH ENCODING CDPG RETURNING NATIONAL VALIDATING WITH VLDTR-1 PROCESSING PROCEDURE SAX-0 THROUGH SAX-1 EXCEPTION STOP RUN
XML_PARSE_XML_1_WITH_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (identifier CDPG) RETURNING NATIONAL VALIDATING WITH (identifier VLDTR-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 ENCODING CDPG RETURNING NATIONAL VALIDATING FILE SCHEMA-1 PROCESSING PROCEDURE IS SAX-0 THROUGH SAX-1 EXCEPTION STOP RUN
XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (identifier CDPG) RETURNING NATIONAL VALIDATING FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 ENCODING 1200 RETURNING NATIONAL VALIDATING VLDTR-1 PROCESSING PROCEDURE SAX-0 EXCEPTION STOP RUN
XML_PARSE_XML_1_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (literal (numericLiteral 1200)) RETURNING NATIONAL VALIDATING (identifier VLDTR-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))

XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_EXCEPTION_STOP_RUN.source=XML PARSE XML-1 WITH ENCODING 1200 RETURNING NATIONAL VALIDATING WITH FILE SCHEMA-1 PROCESSING PROCEDURE IS SAX-0 EXCEPTION STOP RUN
XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_EXCEPTION_STOP_RUN.tree=(proceduralStatement (conditionalStatement (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (literal (numericLiteral 1200)) RETURNING NATIONAL VALIDATING WITH FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN)))))))



XML_PARSE_XML_1_PROCESSING_PROCEDURE_IS_SAX_0_END_XML.source=XML PARSE XML-1 PROCESSING PROCEDURE IS SAX-0 END-XML
XML_PARSE_XML_1_PROCESSING_PROCEDURE_IS_SAX_0_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_WITH_ENCODING_CDPG_PROCESSING_PROCEDURE_SAX_0_END_XML.source=XML PARSE XML-1 WITH ENCODING CDPG PROCESSING PROCEDURE SAX-0 END-XML
XML_PARSE_XML_1_WITH_ENCODING_CDPG_PROCESSING_PROCEDURE_SAX_0_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (identifier CDPG) PROCESSING PROCEDURE (procedureName (sectionName SAX-0))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_ENCODING_1200_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_END_XML.source=XML PARSE XML-1 ENCODING 1200 PROCESSING PROCEDURE IS SAX-0 THROUGH SAX-1 END-XML
XML_PARSE_XML_1_ENCODING_1200_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (literal (numericLiteral 1200)) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_END_XML.source=XML PARSE XML-1 RETURNING NATIONAL PROCESSING PROCEDURE SAX-0 THROUGH SAX-1 END-XML
XML_PARSE_XML_1_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) RETURNING NATIONAL PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_END_XML.source=XML PARSE XML-1 ENCODING CDPG RETURNING NATIONAL PROCESSING PROCEDURE IS SAX-0 THRU SAX-1 END-XML
XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (identifier CDPG) RETURNING NATIONAL PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_END_XML.source=XML PARSE XML-1 WITH ENCODING 1200 RETURNING NATIONAL PROCESSING PROCEDURE SAX-0 THRU SAX-1 END-XML
XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (literal (numericLiteral 1200)) RETURNING NATIONAL PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_END_XML.source=XML PARSE XML-1 VALIDATING WITH VLDTR-1 PROCESSING PROCEDURE IS SAX-0 THROUGH SAX-1 END-XML
XML_PARSE_XML_1_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) VALIDATING WITH (identifier VLDTR-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_END_XML.source=XML PARSE XML-1 VALIDATING FILE SCHEMA-1 PROCESSING PROCEDURE SAX-0 THROUGH SAX-1 END-XML
XML_PARSE_XML_1_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) VALIDATING FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_WITH_ENCODING_CDPG_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_END_XML.source=XML PARSE XML-1 WITH ENCODING CDPG VALIDATING VLDTR-1 PROCESSING PROCEDURE IS SAX-0 END-XML
XML_PARSE_XML_1_WITH_ENCODING_CDPG_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (identifier CDPG) VALIDATING (identifier VLDTR-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_ENCODING_CDPG_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_END_XML.source=XML PARSE XML-1 ENCODING CDPG VALIDATING WITH FILE SCHEMA-1 PROCESSING PROCEDURE SAX-0 END-XML
XML_PARSE_XML_1_ENCODING_CDPG_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (identifier CDPG) VALIDATING WITH FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_ENCODING_1200_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_END_XML.source=XML PARSE XML-1 ENCODING 1200 VALIDATING WITH VLDTR-1 PROCESSING PROCEDURE IS SAX-0 THRU SAX-1 END-XML
XML_PARSE_XML_1_ENCODING_1200_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (literal (numericLiteral 1200)) VALIDATING WITH (identifier VLDTR-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_WITH_ENCODING_1200_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_END_XML.source=XML PARSE XML-1 WITH ENCODING 1200 VALIDATING FILE SCHEMA-1 PROCESSING PROCEDURE SAX-0 THRU SAX-1 END-XML
XML_PARSE_XML_1_WITH_ENCODING_1200_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (literal (numericLiteral 1200)) VALIDATING FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_END_XML.source=XML PARSE XML-1 RETURNING NATIONAL VALIDATING VLDTR-1 PROCESSING PROCEDURE SAX-0 THRU SAX-1 END-XML
XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) RETURNING NATIONAL VALIDATING (identifier VLDTR-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_END_XML.source=XML PARSE XML-1 RETURNING NATIONAL VALIDATING WITH FILE SCHEMA-1 PROCESSING PROCEDURE IS SAX-0 THRU SAX-1 END-XML
XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) RETURNING NATIONAL VALIDATING WITH FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_WITH_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_END_XML.source=XML PARSE XML-1 WITH ENCODING CDPG RETURNING NATIONAL VALIDATING WITH VLDTR-1 PROCESSING PROCEDURE SAX-0 THROUGH SAX-1 END-XML
XML_PARSE_XML_1_WITH_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (identifier CDPG) RETURNING NATIONAL VALIDATING WITH (identifier VLDTR-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_END_XML.source=XML PARSE XML-1 ENCODING CDPG RETURNING NATIONAL VALIDATING FILE SCHEMA-1 PROCESSING PROCEDURE IS SAX-0 THROUGH SAX-1 END-XML
XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (identifier CDPG) RETURNING NATIONAL VALIDATING FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_END_XML.source=XML PARSE XML-1 ENCODING 1200 RETURNING NATIONAL VALIDATING VLDTR-1 PROCESSING PROCEDURE SAX-0 END-XML
XML_PARSE_XML_1_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (literal (numericLiteral 1200)) RETURNING NATIONAL VALIDATING (identifier VLDTR-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0))) exceptionPhrases) END-XML))))

XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_END_XML.source=XML PARSE XML-1 WITH ENCODING 1200 RETURNING NATIONAL VALIDATING WITH FILE SCHEMA-1 PROCESSING PROCEDURE IS SAX-0 END-XML
XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (literal (numericLiteral 1200)) RETURNING NATIONAL VALIDATING WITH FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0))) exceptionPhrases) END-XML))))



XML_PARSE_XML_1_PROCESSING_PROCEDURE_IS_SAX_0_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 PROCESSING PROCEDURE IS SAX-0 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_PROCESSING_PROCEDURE_IS_SAX_0_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_WITH_ENCODING_CDPG_PROCESSING_PROCEDURE_SAX_0_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 WITH ENCODING CDPG PROCESSING PROCEDURE SAX-0 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_WITH_ENCODING_CDPG_PROCESSING_PROCEDURE_SAX_0_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (identifier CDPG) PROCESSING PROCEDURE (procedureName (sectionName SAX-0))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_ENCODING_1200_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 ENCODING 1200 PROCESSING PROCEDURE IS SAX-0 THROUGH SAX-1 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_ENCODING_1200_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (literal (numericLiteral 1200)) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 RETURNING NATIONAL PROCESSING PROCEDURE SAX-0 THROUGH SAX-1 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) RETURNING NATIONAL PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 ENCODING CDPG RETURNING NATIONAL PROCESSING PROCEDURE IS SAX-0 THRU SAX-1 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (identifier CDPG) RETURNING NATIONAL PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 WITH ENCODING 1200 RETURNING NATIONAL PROCESSING PROCEDURE SAX-0 THRU SAX-1 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (literal (numericLiteral 1200)) RETURNING NATIONAL PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 VALIDATING WITH VLDTR-1 PROCESSING PROCEDURE IS SAX-0 THROUGH SAX-1 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) VALIDATING WITH (identifier VLDTR-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 VALIDATING FILE SCHEMA-1 PROCESSING PROCEDURE SAX-0 THROUGH SAX-1 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) VALIDATING FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_WITH_ENCODING_CDPG_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 WITH ENCODING CDPG VALIDATING VLDTR-1 PROCESSING PROCEDURE IS SAX-0 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_WITH_ENCODING_CDPG_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (identifier CDPG) VALIDATING (identifier VLDTR-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_ENCODING_CDPG_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 ENCODING CDPG VALIDATING WITH FILE SCHEMA-1 PROCESSING PROCEDURE SAX-0 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_ENCODING_CDPG_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (identifier CDPG) VALIDATING WITH FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_ENCODING_1200_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 ENCODING 1200 VALIDATING WITH VLDTR-1 PROCESSING PROCEDURE IS SAX-0 THRU SAX-1 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_ENCODING_1200_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (literal (numericLiteral 1200)) VALIDATING WITH (identifier VLDTR-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_WITH_ENCODING_1200_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 WITH ENCODING 1200 VALIDATING FILE SCHEMA-1 PROCESSING PROCEDURE SAX-0 THRU SAX-1 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_WITH_ENCODING_1200_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (literal (numericLiteral 1200)) VALIDATING FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 RETURNING NATIONAL VALIDATING VLDTR-1 PROCESSING PROCEDURE SAX-0 THRU SAX-1 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) RETURNING NATIONAL VALIDATING (identifier VLDTR-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 RETURNING NATIONAL VALIDATING WITH FILE SCHEMA-1 PROCESSING PROCEDURE IS SAX-0 THRU SAX-1 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THRU_SAX_1_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) RETURNING NATIONAL VALIDATING WITH FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THRU (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_WITH_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 WITH ENCODING CDPG RETURNING NATIONAL VALIDATING WITH VLDTR-1 PROCESSING PROCEDURE SAX-0 THROUGH SAX-1 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_WITH_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_WITH_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (identifier CDPG) RETURNING NATIONAL VALIDATING WITH (identifier VLDTR-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 ENCODING CDPG RETURNING NATIONAL VALIDATING FILE SCHEMA-1 PROCESSING PROCEDURE IS SAX-0 THROUGH SAX-1 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_ENCODING_CDPG_RETURNING_NATIONAL_VALIDATING_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_THROUGH_SAX_1_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (identifier CDPG) RETURNING NATIONAL VALIDATING FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0)) THROUGH (procedureName (sectionName SAX-1))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 ENCODING 1200 RETURNING NATIONAL VALIDATING VLDTR-1 PROCESSING PROCEDURE SAX-0 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_VLDTR_1_PROCESSING_PROCEDURE_SAX_0_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) ENCODING (literal (numericLiteral 1200)) RETURNING NATIONAL VALIDATING (identifier VLDTR-1) PROCESSING PROCEDURE (procedureName (sectionName SAX-0))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))

XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_EXCEPTION_STOP_RUN_END_XML.source=XML PARSE XML-1 WITH ENCODING 1200 RETURNING NATIONAL VALIDATING WITH FILE SCHEMA-1 PROCESSING PROCEDURE IS SAX-0 EXCEPTION STOP RUN END-XML
XML_PARSE_XML_1_WITH_ENCODING_1200_RETURNING_NATIONAL_VALIDATING_WITH_FILE_SCHEMA_1_PROCESSING_PROCEDURE_IS_SAX_0_EXCEPTION_STOP_RUN_END_XML.tree=(proceduralStatement (imperativeStatement (delimitedScopeStatement (stmtXMLPARSEdelimitedScope (stmtXMLPARSEconditional (stmtXMLPARSEimperative XML PARSE (identifier XML-1) WITH ENCODING (literal (numericLiteral 1200)) RETURNING NATIONAL VALIDATING WITH FILE (xmlSchemaName SCHEMA-1) PROCESSING PROCEDURE IS (procedureName (sectionName SAX-0))) (exceptionPhrases (onExceptionPhrase EXCEPTION (imperativeStatement (stmtSTOPRUN STOP RUN))))) END-XML))))
