# BEGIN COPYRIGHT NOTICE
# 
# This file is part of program "cobolg"
# Copyright 2016  Rodrigo Lemos
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# END COPYRIGHT NOTICE

SUBTRACT_10_FROM_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT 10 FROM X Y ROUNDED END-SUBTRACT
SUBTRACT_10_FROM_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) FROM (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED)) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_10_20_FROM_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT 10 20 FROM X Y ROUNDED END-SUBTRACT
SUBTRACT_10_20_FROM_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) (literal (numericLiteral 20)) FROM (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED)) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_10_Z_FROM_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT 10 Z FROM X Y ROUNDED END-SUBTRACT
SUBTRACT_10_Z_FROM_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) (identifier Z) FROM (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED)) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_Z_FROM_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT Z FROM X Y ROUNDED END-SUBTRACT
SUBTRACT_Z_FROM_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) FROM (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED)) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_Z_W_FROM_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT Z W FROM X Y ROUNDED END-SUBTRACT
SUBTRACT_Z_W_FROM_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) (identifier W) FROM (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED)) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_Z_10_FROM_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT Z 10 FROM X Y ROUNDED END-SUBTRACT
SUBTRACT_Z_10_FROM_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) (literal (numericLiteral 10)) FROM (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED)) sizeErrorPhrases) END-SUBTRACT)


SUBTRACT_10_FROM_30_GIVING_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT 10 FROM 30 GIVING X Y ROUNDED END-SUBTRACT
SUBTRACT_10_FROM_30_GIVING_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) FROM (literal (numericLiteral 30)) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_10_20_FROM_30_GIVING_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT 10 20 FROM 30 GIVING X Y ROUNDED END-SUBTRACT
SUBTRACT_10_20_FROM_30_GIVING_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) (literal (numericLiteral 20)) FROM (literal (numericLiteral 30)) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_10_Z_FROM_30_GIVING_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT 10 Z FROM 30 GIVING X Y ROUNDED END-SUBTRACT
SUBTRACT_10_Z_FROM_30_GIVING_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) (identifier Z) FROM (literal (numericLiteral 30)) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_Z_FROM_30_GIVING_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT Z FROM 30 GIVING X Y ROUNDED END-SUBTRACT
SUBTRACT_Z_FROM_30_GIVING_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) FROM (literal (numericLiteral 30)) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_Z_W_FROM_30_GIVING_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT Z W FROM 30 GIVING X Y ROUNDED END-SUBTRACT
SUBTRACT_Z_W_FROM_30_GIVING_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) (identifier W) FROM (literal (numericLiteral 30)) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_Z_10_FROM_30_GIVING_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT Z 10 FROM 30 GIVING X Y ROUNDED END-SUBTRACT
SUBTRACT_Z_10_FROM_30_GIVING_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) (literal (numericLiteral 10)) FROM (literal (numericLiteral 30)) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) sizeErrorPhrases) END-SUBTRACT)


SUBTRACT_10_FROM_K_GIVING_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT 10 FROM K GIVING X Y ROUNDED END-SUBTRACT
SUBTRACT_10_FROM_K_GIVING_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) FROM (identifier K) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_10_20_FROM_K_GIVING_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT 10 20 FROM K GIVING X Y ROUNDED END-SUBTRACT
SUBTRACT_10_20_FROM_K_GIVING_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) (literal (numericLiteral 20)) FROM (identifier K) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_10_Z_FROM_K_GIVING_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT 10 Z FROM K GIVING X Y ROUNDED END-SUBTRACT
SUBTRACT_10_Z_FROM_K_GIVING_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) (identifier Z) FROM (identifier K) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_Z_FROM_K_GIVING_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT Z FROM K GIVING X Y ROUNDED END-SUBTRACT
SUBTRACT_Z_FROM_K_GIVING_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) FROM (identifier K) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_Z_W_FROM_K_GIVING_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT Z W FROM K GIVING X Y ROUNDED END-SUBTRACT
SUBTRACT_Z_W_FROM_K_GIVING_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) (identifier W) FROM (identifier K) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) sizeErrorPhrases) END-SUBTRACT)

SUBTRACT_Z_10_FROM_K_GIVING_X_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT Z 10 FROM K GIVING X Y ROUNDED END-SUBTRACT
SUBTRACT_Z_10_FROM_K_GIVING_X_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) (literal (numericLiteral 10)) FROM (identifier K) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) sizeErrorPhrases) END-SUBTRACT)


SUBTRACT_CORR_X_FROM_Y_ROUNDED_END_SUBTRACT.source=SUBTRACT CORR X FROM Y ROUNDED END-SUBTRACT
SUBTRACT_CORR_X_FROM_Y_ROUNDED_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (correspondingPhrase CORR) (identifier X) FROM (roundedPhrase (identifier Y) ROUNDED)) sizeErrorPhrases) END-SUBTRACT)



SUBTRACT_10_FROM_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT 10 FROM X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_10_FROM_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) FROM (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED)) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_10_20_FROM_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT 10 20 FROM X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_10_20_FROM_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) (literal (numericLiteral 20)) FROM (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED)) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_10_Z_FROM_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT 10 Z FROM X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_10_Z_FROM_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) (identifier Z) FROM (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED)) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_Z_FROM_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT Z FROM X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_Z_FROM_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) FROM (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED)) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_Z_W_FROM_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT Z W FROM X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_Z_W_FROM_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) (identifier W) FROM (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED)) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_Z_10_FROM_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT Z 10 FROM X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_Z_10_FROM_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) (literal (numericLiteral 10)) FROM (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED)) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)


SUBTRACT_10_FROM_30_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT 10 FROM 30 GIVING X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_10_FROM_30_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) FROM (literal (numericLiteral 30)) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_10_20_FROM_30_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT 10 20 FROM 30 GIVING X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_10_20_FROM_30_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) (literal (numericLiteral 20)) FROM (literal (numericLiteral 30)) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_10_Z_FROM_30_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT 10 Z FROM 30 GIVING X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_10_Z_FROM_30_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) (identifier Z) FROM (literal (numericLiteral 30)) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_Z_FROM_30_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT Z FROM 30 GIVING X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_Z_FROM_30_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) FROM (literal (numericLiteral 30)) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_Z_W_FROM_30_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT Z W FROM 30 GIVING X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_Z_W_FROM_30_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) (identifier W) FROM (literal (numericLiteral 30)) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_Z_10_FROM_30_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT Z 10 FROM 30 GIVING X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_Z_10_FROM_30_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) (literal (numericLiteral 10)) FROM (literal (numericLiteral 30)) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)


SUBTRACT_10_FROM_K_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT 10 FROM K GIVING X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_10_FROM_K_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) FROM (identifier K) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_10_20_FROM_K_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT 10 20 FROM K GIVING X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_10_20_FROM_K_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) (literal (numericLiteral 20)) FROM (identifier K) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_10_Z_FROM_K_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT 10 Z FROM K GIVING X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_10_Z_FROM_K_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (literal (numericLiteral 10)) (identifier Z) FROM (identifier K) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_Z_FROM_K_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT Z FROM K GIVING X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_Z_FROM_K_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) FROM (identifier K) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_Z_W_FROM_K_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT Z W FROM K GIVING X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_Z_W_FROM_K_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) (identifier W) FROM (identifier K) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

SUBTRACT_Z_10_FROM_K_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT Z 10 FROM K GIVING X Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_Z_10_FROM_K_GIVING_X_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (identifier Z) (literal (numericLiteral 10)) FROM (identifier K) (givingPhrase GIVING (roundedPhrase (identifier X)) (roundedPhrase (identifier Y) ROUNDED))) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)


SUBTRACT_CORR_X_FROM_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.source=SUBTRACT CORR X FROM Y ROUNDED SIZE ERROR STOP RUN NOT SIZE ERROR STOP RUN END-SUBTRACT
SUBTRACT_CORR_X_FROM_Y_ROUNDED_SIZE_ERROR_STOP_RUN_NOT_SIZE_ERROR_STOP_RUN_END_SUBTRACT.tree=(stmtSUBTRACTdelimitedScope (stmtSUBTRACTconditional (stmtSUBTRACTimperative SUBTRACT (correspondingPhrase CORR) (identifier X) FROM (roundedPhrase (identifier Y) ROUNDED)) (sizeErrorPhrases (onSizeErrorPhrase SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))) (notOnSizeErrorPhrase NOT SIZE ERROR (proceduralStatement (imperativeStatement (stmtSTOPRUN STOP RUN)))))) END-SUBTRACT)

