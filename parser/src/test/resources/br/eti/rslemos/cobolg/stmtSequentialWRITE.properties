# BEGIN COPYRIGHT NOTICE
# 
# This file is part of program "cobolg"
# Copyright 2016  Rodrigo Lemos
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# END COPYRIGHT NOTICE

WRITE_RECNAME.source=WRITE RECNAME
WRITE_RECNAME.tree=(stmtSequentialWRITE (stmtSequentialWRITEimperative WRITE (recordName RECNAME)))

WRITE_RECNAME_FROM_X.source=WRITE RECNAME FROM X
WRITE_RECNAME_FROM_X.tree=(stmtSequentialWRITE (stmtSequentialWRITEimperative WRITE (recordName RECNAME) FROM (identifier X)))

WRITE_RECNAME_INVALID_STOP_RUN_NOT_INVALID_STOP_RUN.source=WRITE RECNAME INVALID STOP RUN NOT INVALID STOP RUN
WRITE_RECNAME_INVALID_STOP_RUN_NOT_INVALID_STOP_RUN.tree=(stmtSequentialWRITE (stmtSequentialWRITEimperative WRITE (recordName RECNAME)) (invalidKeyPhrases (invalidKeyPhrase INVALID (proceduralStatement (stmtSTOPRUN STOP RUN))) (notInvalidKeyPhrase NOT INVALID (proceduralStatement (stmtSTOPRUN STOP RUN)))))

WRITE_RECNAME_FROM_X_INVALID_STOP_RUN_NOT_INVALID_STOP_RUN.source=WRITE RECNAME FROM X INVALID STOP RUN NOT INVALID STOP RUN
WRITE_RECNAME_FROM_X_INVALID_STOP_RUN_NOT_INVALID_STOP_RUN.tree=(stmtSequentialWRITE (stmtSequentialWRITEimperative WRITE (recordName RECNAME) FROM (identifier X)) (invalidKeyPhrases (invalidKeyPhrase INVALID (proceduralStatement (stmtSTOPRUN STOP RUN))) (notInvalidKeyPhrase NOT INVALID (proceduralStatement (stmtSTOPRUN STOP RUN)))))

WRITE_RECNAME_END_WRITE.source=WRITE RECNAME END-WRITE
WRITE_RECNAME_END_WRITE.tree=(stmtSequentialWRITE (stmtSequentialWRITEimperative WRITE (recordName RECNAME)) END-WRITE)

WRITE_RECNAME_FROM_X_END_WRITE.source=WRITE RECNAME FROM X END-WRITE
WRITE_RECNAME_FROM_X_END_WRITE.tree=(stmtSequentialWRITE (stmtSequentialWRITEimperative WRITE (recordName RECNAME) FROM (identifier X)) END-WRITE)

WRITE_RECNAME_INVALID_STOP_RUN_NOT_INVALID_STOP_RUN_END_WRITE.source=WRITE RECNAME INVALID STOP RUN NOT INVALID STOP RUN END-WRITE
WRITE_RECNAME_INVALID_STOP_RUN_NOT_INVALID_STOP_RUN_END_WRITE.tree=(stmtSequentialWRITE (stmtSequentialWRITEimperative WRITE (recordName RECNAME)) (invalidKeyPhrases (invalidKeyPhrase INVALID (proceduralStatement (stmtSTOPRUN STOP RUN))) (notInvalidKeyPhrase NOT INVALID (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE)

WRITE_RECNAME_FROM_X_INVALID_STOP_RUN_NOT_INVALID_STOP_RUN_END_WRITE.source=WRITE RECNAME FROM X INVALID STOP RUN NOT INVALID STOP RUN END-WRITE
WRITE_RECNAME_FROM_X_INVALID_STOP_RUN_NOT_INVALID_STOP_RUN_END_WRITE.tree=(stmtSequentialWRITE (stmtSequentialWRITEimperative WRITE (recordName RECNAME) FROM (identifier X)) (invalidKeyPhrases (invalidKeyPhrase INVALID (proceduralStatement (stmtSTOPRUN STOP RUN))) (notInvalidKeyPhrase NOT INVALID (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-WRITE)
