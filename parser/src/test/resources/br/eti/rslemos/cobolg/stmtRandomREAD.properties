# BEGIN COPYRIGHT NOTICE
# 
# This file is part of program "cobolg"
# Copyright 2016  Rodrigo Lemos
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# END COPYRIGHT NOTICE

READ_FILENAME_KEY_K.source=READ FILENAME KEY K
READ_FILENAME_KEY_K.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) KEY (dataName K)))

READ_FILENAME_INTO_X_KEY_K.source=READ FILENAME INTO X KEY K
READ_FILENAME_INTO_X_KEY_K.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) INTO (identifier X) KEY (dataName K)))

READ_FILENAME_RECORD_KEY_IS_K.source=READ FILENAME RECORD KEY IS K
READ_FILENAME_RECORD_KEY_IS_K.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) RECORD KEY IS (dataName K)))

READ_FILENAME_RECORD_INTO_X_KEY_IS_K.source=READ FILENAME RECORD INTO X KEY IS K
READ_FILENAME_RECORD_INTO_X_KEY_IS_K.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) RECORD INTO (identifier X) KEY IS (dataName K)))


READ_FILENAME_KEY_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN.source=READ FILENAME KEY K INVALID KEY STOP RUN NOT INVALID KEY STOP RUN
READ_FILENAME_KEY_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) KEY (dataName K)) (invalidKeyPhrases (invalidKeyPhrase INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN))) (notInvalidKeyPhrase NOT INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN)))))

READ_FILENAME_INTO_X_KEY_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN.source=READ FILENAME INTO X KEY K INVALID KEY STOP RUN NOT INVALID KEY STOP RUN
READ_FILENAME_INTO_X_KEY_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) INTO (identifier X) KEY (dataName K)) (invalidKeyPhrases (invalidKeyPhrase INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN))) (notInvalidKeyPhrase NOT INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN)))))

READ_FILENAME_RECORD_KEY_IS_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN.source=READ FILENAME RECORD KEY IS K INVALID KEY STOP RUN NOT INVALID KEY STOP RUN
READ_FILENAME_RECORD_KEY_IS_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) RECORD KEY IS (dataName K)) (invalidKeyPhrases (invalidKeyPhrase INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN))) (notInvalidKeyPhrase NOT INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN)))))

READ_FILENAME_RECORD_INTO_X_KEY_IS_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN.source=READ FILENAME RECORD INTO X KEY IS K INVALID KEY STOP RUN NOT INVALID KEY STOP RUN
READ_FILENAME_RECORD_INTO_X_KEY_IS_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) RECORD INTO (identifier X) KEY IS (dataName K)) (invalidKeyPhrases (invalidKeyPhrase INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN))) (notInvalidKeyPhrase NOT INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN)))))


READ_FILENAME_KEY_K_END_READ.source=READ FILENAME KEY K END-READ
READ_FILENAME_KEY_K_END_READ.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) KEY (dataName K)) END-READ)

READ_FILENAME_INTO_X_KEY_K_END_READ.source=READ FILENAME INTO X KEY K END-READ
READ_FILENAME_INTO_X_KEY_K_END_READ.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) INTO (identifier X) KEY (dataName K)) END-READ)

READ_FILENAME_RECORD_KEY_IS_K_END_READ.source=READ FILENAME RECORD KEY IS K END-READ
READ_FILENAME_RECORD_KEY_IS_K_END_READ.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) RECORD KEY IS (dataName K)) END-READ)

READ_FILENAME_RECORD_INTO_X_KEY_IS_K_END_READ.source=READ FILENAME RECORD INTO X KEY IS K END-READ
READ_FILENAME_RECORD_INTO_X_KEY_IS_K_END_READ.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) RECORD INTO (identifier X) KEY IS (dataName K)) END-READ)


READ_FILENAME_KEY_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN_END_READ.source=READ FILENAME KEY K INVALID KEY STOP RUN NOT INVALID KEY STOP RUN END-READ
READ_FILENAME_KEY_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN_END_READ.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) KEY (dataName K)) (invalidKeyPhrases (invalidKeyPhrase INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN))) (notInvalidKeyPhrase NOT INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-READ)

READ_FILENAME_INTO_X_KEY_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN_END_READ.source=READ FILENAME INTO X KEY K INVALID KEY STOP RUN NOT INVALID KEY STOP RUN END-READ
READ_FILENAME_INTO_X_KEY_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN_END_READ.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) INTO (identifier X) KEY (dataName K)) (invalidKeyPhrases (invalidKeyPhrase INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN))) (notInvalidKeyPhrase NOT INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-READ)

READ_FILENAME_RECORD_KEY_IS_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN_END_READ.source=READ FILENAME RECORD KEY IS K INVALID KEY STOP RUN NOT INVALID KEY STOP RUN END-READ
READ_FILENAME_RECORD_KEY_IS_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN_END_READ.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) RECORD KEY IS (dataName K)) (invalidKeyPhrases (invalidKeyPhrase INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN))) (notInvalidKeyPhrase NOT INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-READ)

READ_FILENAME_RECORD_INTO_X_KEY_IS_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN_END_READ.source=READ FILENAME RECORD INTO X KEY IS K INVALID KEY STOP RUN NOT INVALID KEY STOP RUN END-READ
READ_FILENAME_RECORD_INTO_X_KEY_IS_K_INVALID_KEY_STOP_RUN_NOT_INVALID_KEY_STOP_RUN_END_READ.tree=(stmtRandomREAD (stmtRandomREADimperative READ (fileName FILENAME) RECORD INTO (identifier X) KEY IS (dataName K)) (invalidKeyPhrases (invalidKeyPhrase INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN))) (notInvalidKeyPhrase NOT INVALID KEY (proceduralStatement (stmtSTOPRUN STOP RUN)))) END-READ)
