# BEGIN COPYRIGHT NOTICE
# 
# This file is part of program "cobolg"
# Copyright 2016  Rodrigo Lemos
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# END COPYRIGHT NOTICE
NoCompilerStatements.source=\
		IDENTIFICATION DIVISION.\n\
		PROGRAM-ID. X.\n\
		PROCEDURE DIVISION.\n    \
		    STOP RUN.

NoCompilerStatements.tree=\
		(program \
			(identificationDivision IDENTIFICATION DIVISION . \
				PROGRAM-ID . (programName X) .\
			) \
			(procedureDivision PROCEDURE DIVISION . \
				(unnamedProceduralSection \
					(unnamedProceduralParagraph \
						(proceduralStatement \
							STOP RUN \
						.)\
					)\
				)\
			)\
		)

EJECTBetweenDivisions.source=\
		IDENTIFICATION DIVISION.\n\
		PROGRAM-ID. X.\n\
		EJECT\n\
		PROCEDURE DIVISION.\n    \
		    STOP RUN.


EJECTBetweenDivisions.tree=\
		(program \
			(identificationDivision IDENTIFICATION DIVISION . \
				PROGRAM-ID . (programName X) .\
			) \
			(compilerStatement EJECT) \
			(procedureDivision PROCEDURE DIVISION . \
				(unnamedProceduralSection \
					(unnamedProceduralParagraph \
						(proceduralStatement \
							STOP RUN \
						.)\
					)\
				)\
			)\
		)

EJECTInsideDivision.source=\
		IDENTIFICATION DIVISION.\n\
		PROGRAM-ID. X.\n\
		PROCEDURE DIVISION.\n\
		EJECT\n    \
		    STOP RUN.

EJECTInsideDivision.tree=\
		(program \
			(identificationDivision IDENTIFICATION DIVISION . \
				PROGRAM-ID . (programName X) .\
			) \
			(procedureDivision PROCEDURE DIVISION . \
				(compilerStatement EJECT) \
				(unnamedProceduralSection \
					(unnamedProceduralParagraph \
						(proceduralStatement \
							STOP RUN \
						.)\
					)\
				)\
			)\
		)


DoubleEJECTBetweenDivisions.source=\
		IDENTIFICATION DIVISION.\n\
		PROGRAM-ID. X.\n\
		EJECT\n\
		EJECT\n\
		PROCEDURE DIVISION.\n    \
		    STOP RUN.

DoubleEJECTBetweenDivisions.tree=\
		(program \
			(identificationDivision IDENTIFICATION DIVISION . \
				PROGRAM-ID . (programName X) .\
			) \
			(compilerStatement EJECT) \
			(compilerStatement EJECT) \
			(procedureDivision PROCEDURE DIVISION . \
				(unnamedProceduralSection \
					(unnamedProceduralParagraph \
						(proceduralStatement \
							STOP RUN \
						.)\
					)\
				)\
			)\
		)


DoubleEJECTInsideDivision.source=\
		IDENTIFICATION DIVISION.\n\
		PROGRAM-ID. X.\n\
		PROCEDURE DIVISION.\n\
		EJECT\n\
		EJECT\n    \
		    STOP RUN.

DoubleEJECTInsideDivision.tree=\
		(program \
			(identificationDivision IDENTIFICATION DIVISION . \
				PROGRAM-ID . (programName X) .\
			) \
			(procedureDivision PROCEDURE DIVISION . \
				(compilerStatement EJECT) \
				(compilerStatement EJECT) \
				(unnamedProceduralSection \
					(unnamedProceduralParagraph \
						(proceduralStatement \
							STOP RUN \
						.)\
					)\
				)\
			)\
		)

COPYStatementOutsideDataDeclaration.source=\
		WORKING-STORAGE SECTION.\n\
		77  DECL-1. COPY COPY-LIB-FOR-DECL-1.\n\
		77  DECL-2.

COPYStatementOutsideDataDeclaration.tree=\
		(workingStorageSection WORKING-STORAGE SECTION . \
			(recordDescriptionEntry \
				(dataDescriptionEntry \
					(levelNumber 77) (dataName DECL-1) \
					dataDescriptionClauses \
				.)\
			) \
			(compilerStatement COPY COPY-LIB-FOR-DECL-1 .) \
			(recordDescriptionEntry \
				(dataDescriptionEntry \
					(levelNumber 77) (dataName DECL-2) \
					dataDescriptionClauses \
				.)\
			)\
		)

COPYStatementOutsideFileDeclaration.source=\
		FILE SECTION.\n\
		FD  FD0. COPY COPY-LIB-FOR-FD0.\n\
		FD  FD1.

COPYStatementOutsideFileDeclaration.tree=\
		(fileSection FILE SECTION . \
			(fileDescriptionParagraph \
				(fileDescriptionEntry FD (fileName FD0) fileDescriptionEntryClauses) \
			.) \
			(compilerStatement COPY COPY-LIB-FOR-FD0 .) \
			(fileDescriptionParagraph \
				(fileDescriptionEntry FD (fileName FD1) fileDescriptionEntryClauses) \
			.)\
		)

COPYStatementWithString.source=\
		FILE SECTION.\n\
		FD  FD0. COPY 'COPY-LIB-FOR-FD0'.

COPYStatementWithString.tree=\
		(fileSection FILE SECTION . \
			(fileDescriptionParagraph \
				(fileDescriptionEntry FD (fileName FD0) fileDescriptionEntryClauses) \
			.) \
			(compilerStatement COPY 'COPY-LIB-FOR-FD0' .)\
		)

EJECTAtTheEnd.source=\
		IDENTIFICATION DIVISION.\n\
		PROGRAM-ID. X.\n\
		PROCEDURE DIVISION.\n    \
		    STOP RUN.\n\
		EJECT

EJECTAtTheEnd.tree=\
		(program \
			(identificationDivision IDENTIFICATION DIVISION . \
				PROGRAM-ID . (programName X) .\
			) \
			(procedureDivision PROCEDURE DIVISION . \
				(unnamedProceduralSection \
					(unnamedProceduralParagraph \
						(proceduralStatement \
							STOP RUN \
						.)\
					)\
				)\
			) \
			(compilerStatement EJECT)\
		)

COPYStatementOutsideLastDataDeclaration.source=\
		WORKING-STORAGE SECTION.\n\
		77  DECL-1. COPY COPY-LIB-FOR-DECL-1.

COPYStatementOutsideLastDataDeclaration.tree=\
		(workingStorageSection WORKING-STORAGE SECTION . \
			(recordDescriptionEntry \
				(dataDescriptionEntry \
					(levelNumber 77) (dataName DECL-1) \
					dataDescriptionClauses \
				.)\
			) \
			(compilerStatement COPY COPY-LIB-FOR-DECL-1 .)\
		)

COPYStatementOutsideLastFileDeclaration.source=\
		FILE SECTION.\n\
		FD  FD0. COPY COPY-LIB-FOR-FD0.

COPYStatementOutsideLastFileDeclaration.tree=\
		(fileSection FILE SECTION . \
			(fileDescriptionParagraph \
				(fileDescriptionEntry FD (fileName FD0) fileDescriptionEntryClauses) \
			.) \
			(compilerStatement COPY COPY-LIB-FOR-FD0 .)\
		)

SoleCOPYStatement.source=\
		COPY ENTIRE-PROGRAM.

# not that I like the rule identificationDivision to appear here but it is 
# required (per reference manual AND grammar); I tried to make it optional,
# but it only got worse (left recursion ensues)
SoleCOPYStatement.tree=\
		(program identificationDivision \
			(compilerStatement COPY ENTIRE-PROGRAM .)\
		)

DoubleEJECTAtTheEnd.source=\
		IDENTIFICATION DIVISION.\n\
		PROGRAM-ID. X.\n\
		PROCEDURE DIVISION.\n    \
		    STOP RUN.\n\
		EJECT\n\
		EJECT

DoubleEJECTAtTheEnd.tree=\
		(program \
			(identificationDivision IDENTIFICATION DIVISION . \
				PROGRAM-ID . (programName X) .\
			) \
			(procedureDivision PROCEDURE DIVISION . \
				(unnamedProceduralSection \
					(unnamedProceduralParagraph \
						(proceduralStatement \
							STOP RUN \
						.)\
					)\
				)\
			) \
			(compilerStatement EJECT) \
			(compilerStatement EJECT)\
		)

EJECTAtTheBeginning.source=\
		EJECT\n\
		IDENTIFICATION DIVISION.\n\
		PROGRAM-ID. X.\n\
		PROCEDURE DIVISION.\n    \
		    STOP RUN.
			
EJECTAtTheBeginning.tree=\
		(program \
			(compilerStatement EJECT) \
			(identificationDivision IDENTIFICATION DIVISION . \
				PROGRAM-ID . (programName X) .\
			) \
			(procedureDivision PROCEDURE DIVISION . \
				(unnamedProceduralSection \
					(unnamedProceduralParagraph \
						(proceduralStatement \
							STOP RUN \
						.)\
					)\
				)\
			)\
		)
					
DoubleEJECTAtTheBeginning.source=\
		EJECT\n\
		EJECT\n\
		IDENTIFICATION DIVISION.\n\
		PROGRAM-ID. X.\n\
		PROCEDURE DIVISION.\n    \
		    STOP RUN.
		
DoubleEJECTAtTheBeginning.tree=\
		(program \
			(compilerStatement EJECT) \
			(compilerStatement EJECT) \
			(identificationDivision IDENTIFICATION DIVISION . \
				PROGRAM-ID . (programName X) .\
			) \
			(procedureDivision PROCEDURE DIVISION . \
				(unnamedProceduralSection \
					(unnamedProceduralParagraph \
						(proceduralStatement \
							STOP RUN \
						.)\
					)\
				)\
			)\
		)

COPYStatementWithMissingPERIOD.source=\
		DISPLAY '' COPY STRING.

COPYStatementWithMissingPERIOD.tree=\
		(proceduralStatement \
			DISPLAY (literal (alphanumericLiteral '')) \
			(compilerStatement COPY STRING .) \
		<missing '.'>)

COPYStatementInsideFileDeclarationWithValueMissingOf.source=\
		FILE SECTION.\n\
		FD  FD0 VALUE COPY VALUE-OF. SYSTEM-NAME 10.
			
COPYStatementInsideFileDeclarationWithValueMissingOf.tree=\
		(fileSection FILE SECTION . \
			(fileDescriptionParagraph \
				(fileDescriptionEntry FD (fileName FD0) \
					(fileDescriptionEntryClauses \
						(fileDescriptionEntryClause \
							(fdValueOfClause VALUE <missing 'OF'> \
								(compilerStatement COPY VALUE-OF .) \
								(systemName SYSTEM-NAME) \
								(literal (numericLiteral 10))\
							)\
						)\
					)\
				) \
			.)\
		)

COPYStatementInsideDataDeclaration.source=\
		WORKING-STORAGE SECTION.\n\
		77  DECL-1 COPY COPY-LIB-FOR-DECL-1.\n\
		77  DECL-2.
		
COPYStatementInsideDataDeclaration.tree=\
		(workingStorageSection WORKING-STORAGE SECTION . \
			(recordDescriptionEntry \
				(dataDescriptionEntry \
					(levelNumber 77) (dataName DECL-1) \
					dataDescriptionClauses \
					(compilerStatement COPY COPY-LIB-FOR-DECL-1 .) \
				<missing '.'>)\
			) \
			(recordDescriptionEntry \
				(dataDescriptionEntry \
					(levelNumber 77) (dataName DECL-2) \
					dataDescriptionClauses \
				.)\
			)\
		)

COPYStatementInsideLastDataDeclaration.source=\
		WORKING-STORAGE SECTION.\n\
		77  DECL-1 COPY COPY-LIB-FOR-DECL-1.
		
COPYStatementInsideLastDataDeclaration.tree=\
		(workingStorageSection WORKING-STORAGE SECTION . \
			(recordDescriptionEntry \
				(dataDescriptionEntry \
					(levelNumber 77) (dataName DECL-1) \
					dataDescriptionClauses \
					(compilerStatement COPY COPY-LIB-FOR-DECL-1 .) \
				<missing '.'>)\
			)\
		)

COPYStatementInsideFileDeclaration.source=\
		FILE SECTION.\n\
		FD  FD0 COPY COPY-LIB-FOR-FD0.\n\
		FD  FD1.

COPYStatementInsideFileDeclaration.tree=\
		(fileSection FILE SECTION . \
			(fileDescriptionParagraph \
				(fileDescriptionEntry \
					FD (fileName FD0) \
					fileDescriptionEntryClauses\
				) \
				(compilerStatement COPY COPY-LIB-FOR-FD0 .) \
			<missing '.'>) \
			(fileDescriptionParagraph \
				(fileDescriptionEntry \
					FD (fileName FD1) \
					fileDescriptionEntryClauses\
				) \
			.)\
		)

COPYStatementInsideLastFileDeclaration.source=\
		FILE SECTION.\n\
		FD  FD0 COPY COPY-LIB-FOR-FD0.
		
COPYStatementInsideLastFileDeclaration.tree=\
		(fileSection FILE SECTION . \
			(fileDescriptionParagraph \
				(fileDescriptionEntry \
					FD (fileName FD0) \
					fileDescriptionEntryClauses\
				) \
				(compilerStatement COPY COPY-LIB-FOR-FD0 .) \
			<missing '.'>)\
		)

TwoCOPYStatementsInsideFileDeclaration.source=\
		FILE SECTION.\n\
		FD  FD0 COPY FD-ACCESS. COPY FD-REG.
		
TwoCOPYStatementsInsideFileDeclaration.tree=\
		(fileSection FILE SECTION . \
			(fileDescriptionParagraph \
				(fileDescriptionEntry \
					FD (fileName FD0) \
					fileDescriptionEntryClauses\
				) \
				(compilerStatement COPY FD-ACCESS .) \
				(compilerStatement COPY FD-REG .) \
			<missing '.'>)\
		)

COPYStatementInsideFileDeclarationWithMissingFilename.source=\
		FILE SECTION.\n\
		FD  FD0 COPY FD-ACCESS. COPY FD-REG.\n\
		FD  COPY FD-AFTER-MISSING-TOKEN.

COPYStatementInsideFileDeclarationWithMissingFilename.tree=\
		(fileSection FILE SECTION . \
			(fileDescriptionParagraph \
				(fileDescriptionEntry \
					FD (fileName FD0) \
					fileDescriptionEntryClauses\
				) \
				(compilerStatement COPY FD-ACCESS .) \
				(compilerStatement COPY FD-REG .) \
			<missing '.'>) \
			(fileDescriptionParagraph \
				(fileDescriptionEntry \
					FD fileName \
					fileDescriptionEntryClauses\
				) \
				(compilerStatement COPY FD-AFTER-MISSING-TOKEN .) \
			<missing '.'>)\
		)

UnterminatedCOPYStatementsInsideFileDeclaration.source=\
		FILE SECTION.\n\
		FD  FD0 COPY COPY-LIB-FOR-FD0\n\
		FD  FD1.

UnterminatedCOPYStatementsInsideFileDeclaration.tree=\
		(fileSection FILE SECTION . \
			(fileDescriptionParagraph \
				(fileDescriptionEntry \
					FD (fileName FD0) \
					fileDescriptionEntryClauses\
				) \
				(compilerStatement COPY COPY-LIB-FOR-FD0) \
			<missing '.'>) \
			(fileDescriptionParagraph \
				(fileDescriptionEntry \
					FD (fileName FD1) \
					fileDescriptionEntryClauses\
				) \
			.)\
		)

